/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.98
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Employee,
  EmployeeQualification,
  EmploymentType,
  PaginatedEmployeeList,
  PaginatedEmployeeQualificationList,
  PaginatedEmploymentTypeList,
  PaginatedQualificationList,
  PaginatedWorkLocationList,
  PatchedEmployee,
  PatchedEmployeeQualification,
  PatchedEmploymentType,
  PatchedQualification,
  PatchedWorkLocation,
  Qualification,
  WorkLocation,
} from '../models/index';
import {
    EmployeeFromJSON,
    EmployeeToJSON,
    EmployeeQualificationFromJSON,
    EmployeeQualificationToJSON,
    EmploymentTypeFromJSON,
    EmploymentTypeToJSON,
    PaginatedEmployeeListFromJSON,
    PaginatedEmployeeListToJSON,
    PaginatedEmployeeQualificationListFromJSON,
    PaginatedEmployeeQualificationListToJSON,
    PaginatedEmploymentTypeListFromJSON,
    PaginatedEmploymentTypeListToJSON,
    PaginatedQualificationListFromJSON,
    PaginatedQualificationListToJSON,
    PaginatedWorkLocationListFromJSON,
    PaginatedWorkLocationListToJSON,
    PatchedEmployeeFromJSON,
    PatchedEmployeeToJSON,
    PatchedEmployeeQualificationFromJSON,
    PatchedEmployeeQualificationToJSON,
    PatchedEmploymentTypeFromJSON,
    PatchedEmploymentTypeToJSON,
    PatchedQualificationFromJSON,
    PatchedQualificationToJSON,
    PatchedWorkLocationFromJSON,
    PatchedWorkLocationToJSON,
    QualificationFromJSON,
    QualificationToJSON,
    WorkLocationFromJSON,
    WorkLocationToJSON,
} from '../models/index';

export interface HrEmployeeQualificationsCreateRequest {
    tenantRef: string;
    employeeQualification: Omit<EmployeeQualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmployeeQualificationsDestroyRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmployeeQualificationsListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}

export interface HrEmployeeQualificationsPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedEmployeeQualification?: Omit<PatchedEmployeeQualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmployeeQualificationsRetrieveRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmployeeQualificationsUpdateRequest {
    id: number;
    tenantRef: string;
    employeeQualification: Omit<EmployeeQualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmployeesCreateRequest {
    tenantRef: string;
    employee: Omit<Employee, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmployeesDestroyRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmployeesListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}

export interface HrEmployeesPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedEmployee?: Omit<PatchedEmployee, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmployeesRetrieveRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmployeesUpdateRequest {
    id: number;
    tenantRef: string;
    employee: Omit<Employee, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmploymentTypesCreateRequest {
    tenantRef: string;
    employmentType: Omit<EmploymentType, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmploymentTypesDestroyRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmploymentTypesListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}

export interface HrEmploymentTypesPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedEmploymentType?: Omit<PatchedEmploymentType, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrEmploymentTypesRetrieveRequest {
    id: number;
    tenantRef: string;
}

export interface HrEmploymentTypesUpdateRequest {
    id: number;
    tenantRef: string;
    employmentType: Omit<EmploymentType, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrQualificationsCreateRequest {
    tenantRef: string;
    qualification: Omit<Qualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrQualificationsDestroyRequest {
    id: number;
    tenantRef: string;
}

export interface HrQualificationsListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}

export interface HrQualificationsPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedQualification?: Omit<PatchedQualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrQualificationsRetrieveRequest {
    id: number;
    tenantRef: string;
}

export interface HrQualificationsUpdateRequest {
    id: number;
    tenantRef: string;
    qualification: Omit<Qualification, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrWorkLocationsCreateRequest {
    tenantRef: string;
    workLocation: Omit<WorkLocation, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrWorkLocationsDestroyRequest {
    id: number;
    tenantRef: string;
}

export interface HrWorkLocationsListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}

export interface HrWorkLocationsPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedWorkLocation?: Omit<PatchedWorkLocation, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

export interface HrWorkLocationsRetrieveRequest {
    id: number;
    tenantRef: string;
}

export interface HrWorkLocationsUpdateRequest {
    id: number;
    tenantRef: string;
    workLocation: Omit<WorkLocation, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'>;
}

/**
 * 
 */
export class HrApi extends runtime.BaseAPI {

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsCreateRaw(requestParameters: HrEmployeeQualificationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmployeeQualification>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsCreate().'
            );
        }

        if (requestParameters['employeeQualification'] == null) {
            throw new runtime.RequiredError(
                'employeeQualification',
                'Required parameter "employeeQualification" was null or undefined when calling hrEmployeeQualificationsCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmployeeQualificationToJSON(requestParameters['employeeQualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeQualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsCreate(requestParameters: HrEmployeeQualificationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmployeeQualification> {
        const response = await this.hrEmployeeQualificationsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsDestroyRaw(requestParameters: HrEmployeeQualificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeeQualificationsDestroy().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsDestroy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsDestroy(requestParameters: HrEmployeeQualificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hrEmployeeQualificationsDestroyRaw(requestParameters, initOverrides);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsListRaw(requestParameters: HrEmployeeQualificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedEmployeeQualificationList>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedEmployeeQualificationListFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsList(requestParameters: HrEmployeeQualificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedEmployeeQualificationList> {
        const response = await this.hrEmployeeQualificationsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsPartialUpdateRaw(requestParameters: HrEmployeeQualificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmployeeQualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeeQualificationsPartialUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsPartialUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchedEmployeeQualificationToJSON(requestParameters['patchedEmployeeQualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeQualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsPartialUpdate(requestParameters: HrEmployeeQualificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmployeeQualification> {
        const response = await this.hrEmployeeQualificationsPartialUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsRetrieveRaw(requestParameters: HrEmployeeQualificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmployeeQualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeeQualificationsRetrieve().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsRetrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeQualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsRetrieve(requestParameters: HrEmployeeQualificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmployeeQualification> {
        const response = await this.hrEmployeeQualificationsRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsUpdateRaw(requestParameters: HrEmployeeQualificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmployeeQualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeeQualificationsUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeeQualificationsUpdate().'
            );
        }

        if (requestParameters['employeeQualification'] == null) {
            throw new runtime.RequiredError(
                'employeeQualification',
                'Required parameter "employeeQualification" was null or undefined when calling hrEmployeeQualificationsUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employee-qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: EmployeeQualificationToJSON(requestParameters['employeeQualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeQualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeeQualificationsUpdate(requestParameters: HrEmployeeQualificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmployeeQualification> {
        const response = await this.hrEmployeeQualificationsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesCreateRaw(requestParameters: HrEmployeesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Employee>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesCreate().'
            );
        }

        if (requestParameters['employee'] == null) {
            throw new runtime.RequiredError(
                'employee',
                'Required parameter "employee" was null or undefined when calling hrEmployeesCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employees/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmployeeToJSON(requestParameters['employee']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesCreate(requestParameters: HrEmployeesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Employee> {
        const response = await this.hrEmployeesCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesDestroyRaw(requestParameters: HrEmployeesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeesDestroy().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesDestroy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employees/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesDestroy(requestParameters: HrEmployeesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hrEmployeesDestroyRaw(requestParameters, initOverrides);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesListRaw(requestParameters: HrEmployeesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedEmployeeList>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employees/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedEmployeeListFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesList(requestParameters: HrEmployeesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedEmployeeList> {
        const response = await this.hrEmployeesListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesPartialUpdateRaw(requestParameters: HrEmployeesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Employee>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeesPartialUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesPartialUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employees/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchedEmployeeToJSON(requestParameters['patchedEmployee']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesPartialUpdate(requestParameters: HrEmployeesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Employee> {
        const response = await this.hrEmployeesPartialUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesRetrieveRaw(requestParameters: HrEmployeesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Employee>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeesRetrieve().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesRetrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employees/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesRetrieve(requestParameters: HrEmployeesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Employee> {
        const response = await this.hrEmployeesRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesUpdateRaw(requestParameters: HrEmployeesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Employee>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmployeesUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmployeesUpdate().'
            );
        }

        if (requestParameters['employee'] == null) {
            throw new runtime.RequiredError(
                'employee',
                'Required parameter "employee" was null or undefined when calling hrEmployeesUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employees/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: EmployeeToJSON(requestParameters['employee']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmployeesUpdate(requestParameters: HrEmployeesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Employee> {
        const response = await this.hrEmployeesUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesCreateRaw(requestParameters: HrEmploymentTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmploymentType>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesCreate().'
            );
        }

        if (requestParameters['employmentType'] == null) {
            throw new runtime.RequiredError(
                'employmentType',
                'Required parameter "employmentType" was null or undefined when calling hrEmploymentTypesCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmploymentTypeToJSON(requestParameters['employmentType']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentTypeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesCreate(requestParameters: HrEmploymentTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmploymentType> {
        const response = await this.hrEmploymentTypesCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesDestroyRaw(requestParameters: HrEmploymentTypesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmploymentTypesDestroy().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesDestroy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesDestroy(requestParameters: HrEmploymentTypesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hrEmploymentTypesDestroyRaw(requestParameters, initOverrides);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesListRaw(requestParameters: HrEmploymentTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedEmploymentTypeList>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedEmploymentTypeListFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesList(requestParameters: HrEmploymentTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedEmploymentTypeList> {
        const response = await this.hrEmploymentTypesListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesPartialUpdateRaw(requestParameters: HrEmploymentTypesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmploymentType>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmploymentTypesPartialUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesPartialUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchedEmploymentTypeToJSON(requestParameters['patchedEmploymentType']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentTypeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesPartialUpdate(requestParameters: HrEmploymentTypesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmploymentType> {
        const response = await this.hrEmploymentTypesPartialUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesRetrieveRaw(requestParameters: HrEmploymentTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmploymentType>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmploymentTypesRetrieve().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesRetrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentTypeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesRetrieve(requestParameters: HrEmploymentTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmploymentType> {
        const response = await this.hrEmploymentTypesRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesUpdateRaw(requestParameters: HrEmploymentTypesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmploymentType>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrEmploymentTypesUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrEmploymentTypesUpdate().'
            );
        }

        if (requestParameters['employmentType'] == null) {
            throw new runtime.RequiredError(
                'employmentType',
                'Required parameter "employmentType" was null or undefined when calling hrEmploymentTypesUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/employment-types/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: EmploymentTypeToJSON(requestParameters['employmentType']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentTypeFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrEmploymentTypesUpdate(requestParameters: HrEmploymentTypesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmploymentType> {
        const response = await this.hrEmploymentTypesUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsCreateRaw(requestParameters: HrQualificationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Qualification>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsCreate().'
            );
        }

        if (requestParameters['qualification'] == null) {
            throw new runtime.RequiredError(
                'qualification',
                'Required parameter "qualification" was null or undefined when calling hrQualificationsCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QualificationToJSON(requestParameters['qualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsCreate(requestParameters: HrQualificationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Qualification> {
        const response = await this.hrQualificationsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsDestroyRaw(requestParameters: HrQualificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrQualificationsDestroy().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsDestroy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsDestroy(requestParameters: HrQualificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hrQualificationsDestroyRaw(requestParameters, initOverrides);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsListRaw(requestParameters: HrQualificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedQualificationList>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedQualificationListFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsList(requestParameters: HrQualificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedQualificationList> {
        const response = await this.hrQualificationsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsPartialUpdateRaw(requestParameters: HrQualificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Qualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrQualificationsPartialUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsPartialUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchedQualificationToJSON(requestParameters['patchedQualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsPartialUpdate(requestParameters: HrQualificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Qualification> {
        const response = await this.hrQualificationsPartialUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsRetrieveRaw(requestParameters: HrQualificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Qualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrQualificationsRetrieve().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsRetrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsRetrieve(requestParameters: HrQualificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Qualification> {
        const response = await this.hrQualificationsRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsUpdateRaw(requestParameters: HrQualificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Qualification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrQualificationsUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrQualificationsUpdate().'
            );
        }

        if (requestParameters['qualification'] == null) {
            throw new runtime.RequiredError(
                'qualification',
                'Required parameter "qualification" was null or undefined when calling hrQualificationsUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/qualifications/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: QualificationToJSON(requestParameters['qualification']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrQualificationsUpdate(requestParameters: HrQualificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Qualification> {
        const response = await this.hrQualificationsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsCreateRaw(requestParameters: HrWorkLocationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WorkLocation>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsCreate().'
            );
        }

        if (requestParameters['workLocation'] == null) {
            throw new runtime.RequiredError(
                'workLocation',
                'Required parameter "workLocation" was null or undefined when calling hrWorkLocationsCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WorkLocationToJSON(requestParameters['workLocation']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WorkLocationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsCreate(requestParameters: HrWorkLocationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WorkLocation> {
        const response = await this.hrWorkLocationsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsDestroyRaw(requestParameters: HrWorkLocationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrWorkLocationsDestroy().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsDestroy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsDestroy(requestParameters: HrWorkLocationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hrWorkLocationsDestroyRaw(requestParameters, initOverrides);
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsListRaw(requestParameters: HrWorkLocationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedWorkLocationList>> {
        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/`;
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedWorkLocationListFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsList(requestParameters: HrWorkLocationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedWorkLocationList> {
        const response = await this.hrWorkLocationsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsPartialUpdateRaw(requestParameters: HrWorkLocationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WorkLocation>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrWorkLocationsPartialUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsPartialUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchedWorkLocationToJSON(requestParameters['patchedWorkLocation']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WorkLocationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsPartialUpdate(requestParameters: HrWorkLocationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WorkLocation> {
        const response = await this.hrWorkLocationsPartialUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsRetrieveRaw(requestParameters: HrWorkLocationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WorkLocation>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrWorkLocationsRetrieve().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsRetrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WorkLocationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsRetrieve(requestParameters: HrWorkLocationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WorkLocation> {
        const response = await this.hrWorkLocationsRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsUpdateRaw(requestParameters: HrWorkLocationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WorkLocation>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling hrWorkLocationsUpdate().'
            );
        }

        if (requestParameters['tenantRef'] == null) {
            throw new runtime.RequiredError(
                'tenantRef',
                'Required parameter "tenantRef" was null or undefined when calling hrWorkLocationsUpdate().'
            );
        }

        if (requestParameters['workLocation'] == null) {
            throw new runtime.RequiredError(
                'workLocation',
                'Required parameter "workLocation" was null or undefined when calling hrWorkLocationsUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/t/{tenant_ref}/hr/work-locations/{id}/`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"tenant_ref"}}`, encodeURIComponent(String(requestParameters['tenantRef'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: WorkLocationToJSON(requestParameters['workLocation']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WorkLocationFromJSON(jsonValue));
    }

    /**
     * Base ViewSet for tenant-aware models.  Responsibilities: - Inherit tenant-aware behavior (scoped get_queryset, perform_create sets tenant) - Extend here with cross-cutting defaults common to most apps (e.g., pagination, permissions)
     */
    async hrWorkLocationsUpdate(requestParameters: HrWorkLocationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WorkLocation> {
        const response = await this.hrWorkLocationsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
