/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.75
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedForm
 */
export interface PatchedForm {
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedForm
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedForm
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedForm
     */
    readonly archiveAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedForm
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedForm
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedForm
     */
    openDateTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedForm
     */
    closeDateTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    maxSubmissions?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    maxIndividualSubmissions?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedForm
     */
    successMessage?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedForm
     */
    isTemplate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedForm
     */
    isActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    readonly tenant?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    readonly createdBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedForm
     */
    readonly updatedBy?: number | null;
    /**
     * If this form is associated with a production, select it here.
     * @type {number}
     * @memberof PatchedForm
     */
    production?: number | null;
}

/**
 * Check if a given object implements the PatchedForm interface.
 */
export function instanceOfPatchedForm(value: object): value is PatchedForm {
    return true;
}

export function PatchedFormFromJSON(json: any): PatchedForm {
    return PatchedFormFromJSONTyped(json, false);
}

export function PatchedFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedForm {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'openDateTime': json['open_date_time'] == null ? undefined : (new Date(json['open_date_time'])),
        'closeDateTime': json['close_date_time'] == null ? undefined : (new Date(json['close_date_time'])),
        'maxSubmissions': json['max_submissions'] == null ? undefined : json['max_submissions'],
        'maxIndividualSubmissions': json['max_individual_submissions'] == null ? undefined : json['max_individual_submissions'],
        'successMessage': json['success_message'] == null ? undefined : json['success_message'],
        'isTemplate': json['is_template'] == null ? undefined : json['is_template'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'production': json['production'] == null ? undefined : json['production'],
    };
}

export function PatchedFormToJSON(json: any): PatchedForm {
    return PatchedFormToJSONTyped(json, false);
}

export function PatchedFormToJSONTyped(value?: Omit<PatchedForm, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'open_date_time': value['openDateTime'] === null ? null : ((value['openDateTime'] as any)?.toISOString()),
        'close_date_time': value['closeDateTime'] === null ? null : ((value['closeDateTime'] as any)?.toISOString()),
        'max_submissions': value['maxSubmissions'],
        'max_individual_submissions': value['maxIndividualSubmissions'],
        'success_message': value['successMessage'],
        'is_template': value['isTemplate'],
        'is_active': value['isActive'],
        'production': value['production'],
    };
}

