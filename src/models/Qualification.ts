/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.41
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Qualification
 */
export interface Qualification {
    /**
     * 
     * @type {number}
     * @memberof Qualification
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof Qualification
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Qualification
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Qualification
     */
    archiveAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Qualification
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Qualification
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Qualification
     */
    tenant: number;
    /**
     * 
     * @type {number}
     * @memberof Qualification
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof Qualification
     */
    updatedBy?: number | null;
}

/**
 * Check if a given object implements the Qualification interface.
 */
export function instanceOfQualification(value: object): value is Qualification {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    return true;
}

export function QualificationFromJSON(json: any): Qualification {
    return QualificationFromJSONTyped(json, false);
}

export function QualificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Qualification {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}

export function QualificationToJSON(json: any): Qualification {
    return QualificationToJSONTyped(json, false);
}

export function QualificationToJSONTyped(value?: Omit<Qualification, 'id'|'created_at'|'updated_at'|'created_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'archive_at': value['archiveAt'] === null ? null : ((value['archiveAt'] as any)?.toISOString()),
        'name': value['name'],
        'description': value['description'],
        'tenant': value['tenant'],
        'updated_by': value['updatedBy'],
    };
}

