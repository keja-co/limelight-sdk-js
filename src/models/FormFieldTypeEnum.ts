/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.90
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * * `short_text` - Single Line Text
 * * `long_text` - Multiple Line Text
 * * `multi_choice` - Multiple Choice
 * * `number` - Floating Point Number
 * * `decimal_number` - Decimal Number
 * * `info` - Information Display
 * * `file` - File Upload
 * * `slider` - Slider
 * * `date` - Date Picker
 * * `time` - Time Picker
 * * `datetime` - Date and Time Picker
 * * `email` - Email Address
 * * `phone` - Phone Number
 * * `url` - URL
 * * `checkbox` - Single Checkbox
 * * `section_header` - Section Header
 * * `rating` - Star Rating
 * * `signature` - Digital Signature
 * * `external_signature` - External Signature
 * @export
 */
export const FormFieldTypeEnum = {
    ShortText: 'short_text',
    LongText: 'long_text',
    MultiChoice: 'multi_choice',
    Number: 'number',
    DecimalNumber: 'decimal_number',
    Info: 'info',
    File: 'file',
    Slider: 'slider',
    Date: 'date',
    Time: 'time',
    Datetime: 'datetime',
    Email: 'email',
    Phone: 'phone',
    Url: 'url',
    Checkbox: 'checkbox',
    SectionHeader: 'section_header',
    Rating: 'rating',
    Signature: 'signature',
    ExternalSignature: 'external_signature'
} as const;
export type FormFieldTypeEnum = typeof FormFieldTypeEnum[keyof typeof FormFieldTypeEnum];


export function instanceOfFormFieldTypeEnum(value: any): boolean {
    for (const key in FormFieldTypeEnum) {
        if (Object.prototype.hasOwnProperty.call(FormFieldTypeEnum, key)) {
            if (FormFieldTypeEnum[key as keyof typeof FormFieldTypeEnum] === value) {
                return true;
            }
        }
    }
    return false;
}

export function FormFieldTypeEnumFromJSON(json: any): FormFieldTypeEnum {
    return FormFieldTypeEnumFromJSONTyped(json, false);
}

export function FormFieldTypeEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormFieldTypeEnum {
    return json as FormFieldTypeEnum;
}

export function FormFieldTypeEnumToJSON(value?: FormFieldTypeEnum | null): any {
    return value as any;
}

export function FormFieldTypeEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): FormFieldTypeEnum {
    return value as FormFieldTypeEnum;
}

