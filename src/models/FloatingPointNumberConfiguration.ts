/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.98
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FloatingPointNumberConfiguration
 */
export interface FloatingPointNumberConfiguration {
    /**
     * 
     * @type {number}
     * @memberof FloatingPointNumberConfiguration
     */
    minValue?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FloatingPointNumberConfiguration
     */
    maxValue?: number | null;
    /**
     * Step increment for the number input
     * @type {number}
     * @memberof FloatingPointNumberConfiguration
     */
    step?: number;
}

/**
 * Check if a given object implements the FloatingPointNumberConfiguration interface.
 */
export function instanceOfFloatingPointNumberConfiguration(value: object): value is FloatingPointNumberConfiguration {
    return true;
}

export function FloatingPointNumberConfigurationFromJSON(json: any): FloatingPointNumberConfiguration {
    return FloatingPointNumberConfigurationFromJSONTyped(json, false);
}

export function FloatingPointNumberConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FloatingPointNumberConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'minValue': json['min_value'] == null ? undefined : json['min_value'],
        'maxValue': json['max_value'] == null ? undefined : json['max_value'],
        'step': json['step'] == null ? undefined : json['step'],
    };
}

export function FloatingPointNumberConfigurationToJSON(json: any): FloatingPointNumberConfiguration {
    return FloatingPointNumberConfigurationToJSONTyped(json, false);
}

export function FloatingPointNumberConfigurationToJSONTyped(value?: FloatingPointNumberConfiguration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min_value': value['minValue'],
        'max_value': value['maxValue'],
        'step': value['step'],
    };
}

