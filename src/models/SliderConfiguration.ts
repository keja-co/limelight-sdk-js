/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.86
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MaxValue1 } from './MaxValue1';
import {
    MaxValue1FromJSON,
    MaxValue1FromJSONTyped,
    MaxValue1ToJSON,
    MaxValue1ToJSONTyped,
} from './MaxValue1';
import type { MinValue1 } from './MinValue1';
import {
    MinValue1FromJSON,
    MinValue1FromJSONTyped,
    MinValue1ToJSON,
    MinValue1ToJSONTyped,
} from './MinValue1';
import type { Step } from './Step';
import {
    StepFromJSON,
    StepFromJSONTyped,
    StepToJSON,
    StepToJSONTyped,
} from './Step';

/**
 * 
 * @export
 * @interface SliderConfiguration
 */
export interface SliderConfiguration {
    /**
     * 
     * @type {MinValue1}
     * @memberof SliderConfiguration
     */
    minValue?: MinValue1;
    /**
     * 
     * @type {MaxValue1}
     * @memberof SliderConfiguration
     */
    maxValue?: MaxValue1;
    /**
     * 
     * @type {Step}
     * @memberof SliderConfiguration
     */
    step?: Step;
}

/**
 * Check if a given object implements the SliderConfiguration interface.
 */
export function instanceOfSliderConfiguration(value: object): value is SliderConfiguration {
    return true;
}

export function SliderConfigurationFromJSON(json: any): SliderConfiguration {
    return SliderConfigurationFromJSONTyped(json, false);
}

export function SliderConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): SliderConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'minValue': json['min_value'] == null ? undefined : MinValue1FromJSON(json['min_value']),
        'maxValue': json['max_value'] == null ? undefined : MaxValue1FromJSON(json['max_value']),
        'step': json['step'] == null ? undefined : StepFromJSON(json['step']),
    };
}

export function SliderConfigurationToJSON(json: any): SliderConfiguration {
    return SliderConfigurationToJSONTyped(json, false);
}

export function SliderConfigurationToJSONTyped(value?: SliderConfiguration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min_value': MinValue1ToJSON(value['minValue']),
        'max_value': MaxValue1ToJSON(value['maxValue']),
        'step': StepToJSON(value['step']),
    };
}

