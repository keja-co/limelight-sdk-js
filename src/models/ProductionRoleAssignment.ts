/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleEnum } from './RoleEnum';
import {
    RoleEnumFromJSON,
    RoleEnumFromJSONTyped,
    RoleEnumToJSON,
    RoleEnumToJSONTyped,
} from './RoleEnum';

/**
 * 
 * @export
 * @interface ProductionRoleAssignment
 */
export interface ProductionRoleAssignment {
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof ProductionRoleAssignment
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductionRoleAssignment
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductionRoleAssignment
     */
    archiveAt?: Date | null;
    /**
     * 
     * @type {RoleEnum}
     * @memberof ProductionRoleAssignment
     */
    role: RoleEnum;
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    readonly tenantId: number;
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    updatedBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    production: number;
    /**
     * 
     * @type {number}
     * @memberof ProductionRoleAssignment
     */
    member: number;
}



/**
 * Check if a given object implements the ProductionRoleAssignment interface.
 */
export function instanceOfProductionRoleAssignment(value: object): value is ProductionRoleAssignment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('production' in value) || value['production'] === undefined) return false;
    if (!('member' in value) || value['member'] === undefined) return false;
    return true;
}

export function ProductionRoleAssignmentFromJSON(json: any): ProductionRoleAssignment {
    return ProductionRoleAssignmentFromJSONTyped(json, false);
}

export function ProductionRoleAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductionRoleAssignment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'role': RoleEnumFromJSON(json['role']),
        'tenantId': json['tenant_id'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'production': json['production'],
        'member': json['member'],
    };
}

export function ProductionRoleAssignmentToJSON(json: any): ProductionRoleAssignment {
    return ProductionRoleAssignmentToJSONTyped(json, false);
}

export function ProductionRoleAssignmentToJSONTyped(value?: Omit<ProductionRoleAssignment, 'id'|'created_at'|'updated_at'|'tenant_id'|'created_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'archive_at': value['archiveAt'] === null ? null : ((value['archiveAt'] as any)?.toISOString()),
        'role': RoleEnumToJSON(value['role']),
        'updated_by': value['updatedBy'],
        'production': value['production'],
        'member': value['member'],
    };
}

