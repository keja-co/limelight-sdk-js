/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Venue } from './Venue';
import {
    VenueFromJSON,
    VenueFromJSONTyped,
    VenueToJSON,
    VenueToJSONTyped,
} from './Venue';
import type { VenueTag } from './VenueTag';
import {
    VenueTagFromJSON,
    VenueTagFromJSONTyped,
    VenueTagToJSON,
    VenueTagToJSONTyped,
} from './VenueTag';

/**
 * 
 * @export
 * @interface VenueTagAssignment
 */
export interface VenueTagAssignment {
    /**
     * 
     * @type {number}
     * @memberof VenueTagAssignment
     */
    readonly id: number;
    /**
     * 
     * @type {Venue}
     * @memberof VenueTagAssignment
     */
    venue: Venue;
    /**
     * 
     * @type {VenueTag}
     * @memberof VenueTagAssignment
     */
    tag: VenueTag;
    /**
     * 
     * @type {Date}
     * @memberof VenueTagAssignment
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof VenueTagAssignment
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof VenueTagAssignment
     */
    archiveAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof VenueTagAssignment
     */
    readonly tenantId: number;
    /**
     * 
     * @type {number}
     * @memberof VenueTagAssignment
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof VenueTagAssignment
     */
    updatedBy?: number | null;
}

/**
 * Check if a given object implements the VenueTagAssignment interface.
 */
export function instanceOfVenueTagAssignment(value: object): value is VenueTagAssignment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('venue' in value) || value['venue'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    return true;
}

export function VenueTagAssignmentFromJSON(json: any): VenueTagAssignment {
    return VenueTagAssignmentFromJSONTyped(json, false);
}

export function VenueTagAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): VenueTagAssignment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'venue': VenueFromJSON(json['venue']),
        'tag': VenueTagFromJSON(json['tag']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'tenantId': json['tenant_id'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}

export function VenueTagAssignmentToJSON(json: any): VenueTagAssignment {
    return VenueTagAssignmentToJSONTyped(json, false);
}

export function VenueTagAssignmentToJSONTyped(value?: Omit<VenueTagAssignment, 'id'|'created_at'|'updated_at'|'tenant_id'|'created_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'venue': VenueToJSON(value['venue']),
        'tag': VenueTagToJSON(value['tag']),
        'archive_at': value['archiveAt'] === null ? null : ((value['archiveAt'] as any)?.toISOString()),
        'updated_by': value['updatedBy'],
    };
}

