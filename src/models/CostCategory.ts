/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.108
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CostCategory
 */
export interface CostCategory {
    /**
     * 
     * @type {number}
     * @memberof CostCategory
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof CostCategory
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CostCategory
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CostCategory
     */
    readonly archiveAt: Date | null;
    /**
     * 
     * @type {string}
     * @memberof CostCategory
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CostCategory
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CostCategory
     */
    lineCode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CostCategory
     */
    readonly tenant: number;
    /**
     * 
     * @type {number}
     * @memberof CostCategory
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof CostCategory
     */
    readonly updatedBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof CostCategory
     */
    parent?: number | null;
}

/**
 * Check if a given object implements the CostCategory interface.
 */
export function instanceOfCostCategory(value: object): value is CostCategory {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined) return false;
    return true;
}

export function CostCategoryFromJSON(json: any): CostCategory {
    return CostCategoryFromJSONTyped(json, false);
}

export function CostCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CostCategory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'lineCode': json['line_code'] == null ? undefined : json['line_code'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'parent': json['parent'] == null ? undefined : json['parent'],
    };
}

export function CostCategoryToJSON(json: any): CostCategory {
    return CostCategoryToJSONTyped(json, false);
}

export function CostCategoryToJSONTyped(value?: Omit<CostCategory, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'line_code': value['lineCode'],
        'parent': value['parent'],
    };
}

