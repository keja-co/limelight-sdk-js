/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.82
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Serializer for the Slot model.
 * @export
 * @interface PatchedSlot
 */
export interface PatchedSlot {
    /**
     * 
     * @type {number}
     * @memberof PatchedSlot
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedSlot
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedSlot
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedSlot
     */
    readonly archiveAt?: Date | null;
    /**
     * Name of the slot
     * @type {string}
     * @memberof PatchedSlot
     */
    name?: string | null;
    /**
     * Start time of the slot
     * @type {Date}
     * @memberof PatchedSlot
     */
    startTime?: Date;
    /**
     * End time of the slot
     * @type {Date}
     * @memberof PatchedSlot
     */
    endTime?: Date;
    /**
     * Limit of participants who can register for the slot. Leave null/none to disable limit.
     * @type {number}
     * @memberof PatchedSlot
     */
    limit?: number | null;
    /**
     * Notes for the slot. Supports markdown.
     * @type {string}
     * @memberof PatchedSlot
     */
    notes?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedSlot
     */
    readonly tenant?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedSlot
     */
    readonly createdBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedSlot
     */
    readonly updatedBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedSlot
     */
    audition?: number;
}

/**
 * Check if a given object implements the PatchedSlot interface.
 */
export function instanceOfPatchedSlot(value: object): value is PatchedSlot {
    return true;
}

export function PatchedSlotFromJSON(json: any): PatchedSlot {
    return PatchedSlotFromJSONTyped(json, false);
}

export function PatchedSlotFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedSlot {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'startTime': json['start_time'] == null ? undefined : (new Date(json['start_time'])),
        'endTime': json['end_time'] == null ? undefined : (new Date(json['end_time'])),
        'limit': json['limit'] == null ? undefined : json['limit'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'audition': json['audition'] == null ? undefined : json['audition'],
    };
}

export function PatchedSlotToJSON(json: any): PatchedSlot {
    return PatchedSlotToJSONTyped(json, false);
}

export function PatchedSlotToJSONTyped(value?: Omit<PatchedSlot, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'start_time': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'end_time': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'limit': value['limit'],
        'notes': value['notes'],
        'audition': value['audition'],
    };
}

