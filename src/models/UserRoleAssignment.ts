/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserRoleAssignment
 */
export interface UserRoleAssignment {
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof UserRoleAssignment
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserRoleAssignment
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserRoleAssignment
     */
    archiveAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    tenant: number;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    createdBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    updatedBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    user: number;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    role: number;
}

/**
 * Check if a given object implements the UserRoleAssignment interface.
 */
export function instanceOfUserRoleAssignment(value: object): value is UserRoleAssignment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function UserRoleAssignmentFromJSON(json: any): UserRoleAssignment {
    return UserRoleAssignmentFromJSONTyped(json, false);
}

export function UserRoleAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRoleAssignment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'tenant': json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'user': json['user'],
        'role': json['role'],
    };
}

export function UserRoleAssignmentToJSON(json: any): UserRoleAssignment {
    return UserRoleAssignmentToJSONTyped(json, false);
}

export function UserRoleAssignmentToJSONTyped(value?: Omit<UserRoleAssignment, 'id'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'archive_at': value['archiveAt'] === null ? null : ((value['archiveAt'] as any)?.toISOString()),
        'tenant': value['tenant'],
        'created_by': value['createdBy'],
        'updated_by': value['updatedBy'],
        'user': value['user'],
        'role': value['role'],
    };
}

