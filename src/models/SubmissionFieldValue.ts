/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.96
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubmissionFieldValue
 */
export interface SubmissionFieldValue {
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof SubmissionFieldValue
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SubmissionFieldValue
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SubmissionFieldValue
     */
    readonly archiveAt: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    textData?: string;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    numberData?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SubmissionFieldValue
     */
    dateData?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof SubmissionFieldValue
     */
    datetimeData?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    timeData?: string | null;
    /**
     * Stores selected choices for multi-choice fields as a comma-separated string.
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    choiceData?: string;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    phoneData?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    urlData?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    emailData?: string | null;
    /**
     * URI of the uploaded file, if applicable. Signature fields will store the signature image URI here.
     * @type {string}
     * @memberof SubmissionFieldValue
     */
    fileUri?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SubmissionFieldValue
     */
    booleanData?: boolean;
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    readonly tenant: number;
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    readonly updatedBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    submission: number;
    /**
     * 
     * @type {number}
     * @memberof SubmissionFieldValue
     */
    formField: number;
}

/**
 * Check if a given object implements the SubmissionFieldValue interface.
 */
export function instanceOfSubmissionFieldValue(value: object): value is SubmissionFieldValue {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined) return false;
    if (!('submission' in value) || value['submission'] === undefined) return false;
    if (!('formField' in value) || value['formField'] === undefined) return false;
    return true;
}

export function SubmissionFieldValueFromJSON(json: any): SubmissionFieldValue {
    return SubmissionFieldValueFromJSONTyped(json, false);
}

export function SubmissionFieldValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmissionFieldValue {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'textData': json['text_data'] == null ? undefined : json['text_data'],
        'numberData': json['number_data'] == null ? undefined : json['number_data'],
        'dateData': json['date_data'] == null ? undefined : (new Date(json['date_data'])),
        'datetimeData': json['datetime_data'] == null ? undefined : (new Date(json['datetime_data'])),
        'timeData': json['time_data'] == null ? undefined : json['time_data'],
        'choiceData': json['choice_data'] == null ? undefined : json['choice_data'],
        'phoneData': json['phone_data'] == null ? undefined : json['phone_data'],
        'urlData': json['url_data'] == null ? undefined : json['url_data'],
        'emailData': json['email_data'] == null ? undefined : json['email_data'],
        'fileUri': json['file_uri'] == null ? undefined : json['file_uri'],
        'booleanData': json['boolean_data'] == null ? undefined : json['boolean_data'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'submission': json['submission'],
        'formField': json['form_field'],
    };
}

export function SubmissionFieldValueToJSON(json: any): SubmissionFieldValue {
    return SubmissionFieldValueToJSONTyped(json, false);
}

export function SubmissionFieldValueToJSONTyped(value?: Omit<SubmissionFieldValue, 'id'|'created_at'|'updated_at'|'archive_at'|'tenant'|'created_by'|'updated_by'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'text_data': value['textData'],
        'number_data': value['numberData'],
        'date_data': value['dateData'] === null ? null : ((value['dateData'] as any)?.toISOString().substring(0,10)),
        'datetime_data': value['datetimeData'] === null ? null : ((value['datetimeData'] as any)?.toISOString()),
        'time_data': value['timeData'],
        'choice_data': value['choiceData'],
        'phone_data': value['phoneData'],
        'url_data': value['urlData'],
        'email_data': value['emailData'],
        'file_uri': value['fileUri'],
        'boolean_data': value['booleanData'],
        'submission': value['submission'],
        'form_field': value['formField'],
    };
}

