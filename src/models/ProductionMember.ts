/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductionMember
 */
export interface ProductionMember {
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    readonly tenant: number;
    /**
     * 
     * @type {Date}
     * @memberof ProductionMember
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductionMember
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductionMember
     */
    readonly archiveAt: Date | null;
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    readonly createdBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    readonly updatedBy: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    production: number;
    /**
     * 
     * @type {number}
     * @memberof ProductionMember
     */
    member: number;
    /**
     * 
     * @type {string}
     * @memberof ProductionMember
     */
    readonly memberName: string | null;
}

/**
 * Check if a given object implements the ProductionMember interface.
 */
export function instanceOfProductionMember(value: object): value is ProductionMember {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined) return false;
    if (!('production' in value) || value['production'] === undefined) return false;
    if (!('member' in value) || value['member'] === undefined) return false;
    if (!('memberName' in value) || value['memberName'] === undefined) return false;
    return true;
}

export function ProductionMemberFromJSON(json: any): ProductionMember {
    return ProductionMemberFromJSONTyped(json, false);
}

export function ProductionMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductionMember {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenant': json['tenant'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'production': json['production'],
        'member': json['member'],
        'memberName': json['member_name'],
    };
}

export function ProductionMemberToJSON(json: any): ProductionMember {
    return ProductionMemberToJSONTyped(json, false);
}

export function ProductionMemberToJSONTyped(value?: Omit<ProductionMember, 'id'|'tenant'|'created_at'|'updated_at'|'archive_at'|'created_by'|'updated_by'|'member_name'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'production': value['production'],
        'member': value['member'],
    };
}

