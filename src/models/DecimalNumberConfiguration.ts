/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MinValue } from './MinValue';
import {
    MinValueFromJSON,
    MinValueFromJSONTyped,
    MinValueToJSON,
    MinValueToJSONTyped,
} from './MinValue';
import type { MaxValue } from './MaxValue';
import {
    MaxValueFromJSON,
    MaxValueFromJSONTyped,
    MaxValueToJSON,
    MaxValueToJSONTyped,
} from './MaxValue';

/**
 * 
 * @export
 * @interface DecimalNumberConfiguration
 */
export interface DecimalNumberConfiguration {
    /**
     * 
     * @type {MinValue}
     * @memberof DecimalNumberConfiguration
     */
    minValue?: MinValue | null;
    /**
     * 
     * @type {MaxValue}
     * @memberof DecimalNumberConfiguration
     */
    maxValue?: MaxValue | null;
    /**
     * Step increment for the decimal number input
     * @type {number}
     * @memberof DecimalNumberConfiguration
     */
    step?: number;
    /**
     * 
     * @type {number}
     * @memberof DecimalNumberConfiguration
     */
    decimalPlaces?: number | null;
}

/**
 * Check if a given object implements the DecimalNumberConfiguration interface.
 */
export function instanceOfDecimalNumberConfiguration(value: object): value is DecimalNumberConfiguration {
    return true;
}

export function DecimalNumberConfigurationFromJSON(json: any): DecimalNumberConfiguration {
    return DecimalNumberConfigurationFromJSONTyped(json, false);
}

export function DecimalNumberConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DecimalNumberConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'minValue': json['min_value'] == null ? undefined : MinValueFromJSON(json['min_value']),
        'maxValue': json['max_value'] == null ? undefined : MaxValueFromJSON(json['max_value']),
        'step': json['step'] == null ? undefined : json['step'],
        'decimalPlaces': json['decimal_places'] == null ? undefined : json['decimal_places'],
    };
}

export function DecimalNumberConfigurationToJSON(json: any): DecimalNumberConfiguration {
    return DecimalNumberConfigurationToJSONTyped(json, false);
}

export function DecimalNumberConfigurationToJSONTyped(value?: DecimalNumberConfiguration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min_value': MinValueToJSON(value['minValue']),
        'max_value': MaxValueToJSON(value['maxValue']),
        'step': value['step'],
        'decimal_places': value['decimalPlaces'],
    };
}

