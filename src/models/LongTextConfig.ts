/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.101
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LongTextConfig
 */
export interface LongTextConfig {
    /**
     * Maximum length of the text
     * @type {number}
     * @memberof LongTextConfig
     */
    maxLength?: number;
    /**
     * Minimum length of the text
     * @type {number}
     * @memberof LongTextConfig
     */
    minLength?: number;
    /**
     * Number of lines for the text input
     * @type {number}
     * @memberof LongTextConfig
     */
    lines?: number;
    /**
     * Whether rich text formatting is allowed
     * @type {boolean}
     * @memberof LongTextConfig
     */
    richText?: boolean;
}

/**
 * Check if a given object implements the LongTextConfig interface.
 */
export function instanceOfLongTextConfig(value: object): value is LongTextConfig {
    return true;
}

export function LongTextConfigFromJSON(json: any): LongTextConfig {
    return LongTextConfigFromJSONTyped(json, false);
}

export function LongTextConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): LongTextConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'maxLength': json['max_length'] == null ? undefined : json['max_length'],
        'minLength': json['min_length'] == null ? undefined : json['min_length'],
        'lines': json['lines'] == null ? undefined : json['lines'],
        'richText': json['rich_text'] == null ? undefined : json['rich_text'],
    };
}

export function LongTextConfigToJSON(json: any): LongTextConfig {
    return LongTextConfigToJSONTyped(json, false);
}

export function LongTextConfigToJSONTyped(value?: LongTextConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'max_length': value['maxLength'],
        'min_length': value['minLength'],
        'lines': value['lines'],
        'rich_text': value['richText'],
    };
}

