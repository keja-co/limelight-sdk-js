/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.102
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedTenant
 */
export interface PatchedTenant {
    /**
     * 
     * @type {number}
     * @memberof PatchedTenant
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedTenant
     */
    readonly ulid?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTenant
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTenant
     */
    name?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTenant
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTenant
     */
    readonly updatedAt?: Date;
}

/**
 * Check if a given object implements the PatchedTenant interface.
 */
export function instanceOfPatchedTenant(value: object): value is PatchedTenant {
    return true;
}

export function PatchedTenantFromJSON(json: any): PatchedTenant {
    return PatchedTenantFromJSONTyped(json, false);
}

export function PatchedTenantFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedTenant {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ulid': json['ulid'] == null ? undefined : json['ulid'],
        'code': json['code'] == null ? undefined : json['code'],
        'name': json['name'] == null ? undefined : json['name'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function PatchedTenantToJSON(json: any): PatchedTenant {
    return PatchedTenantToJSONTyped(json, false);
}

export function PatchedTenantToJSONTyped(value?: Omit<PatchedTenant, 'id'|'ulid'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'name': value['name'],
    };
}

