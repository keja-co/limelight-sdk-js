/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductionBudgetTotals
 */
export interface ProductionBudgetTotals {
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    costActual: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    costAll: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    costPending: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    incomeActual: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    incomePending: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    incomeExpected: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionBudgetTotals
     */
    netActual: string;
}

/**
 * Check if a given object implements the ProductionBudgetTotals interface.
 */
export function instanceOfProductionBudgetTotals(value: object): value is ProductionBudgetTotals {
    if (!('costActual' in value) || value['costActual'] === undefined) return false;
    if (!('costAll' in value) || value['costAll'] === undefined) return false;
    if (!('costPending' in value) || value['costPending'] === undefined) return false;
    if (!('incomeActual' in value) || value['incomeActual'] === undefined) return false;
    if (!('incomePending' in value) || value['incomePending'] === undefined) return false;
    if (!('incomeExpected' in value) || value['incomeExpected'] === undefined) return false;
    if (!('netActual' in value) || value['netActual'] === undefined) return false;
    return true;
}

export function ProductionBudgetTotalsFromJSON(json: any): ProductionBudgetTotals {
    return ProductionBudgetTotalsFromJSONTyped(json, false);
}

export function ProductionBudgetTotalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductionBudgetTotals {
    if (json == null) {
        return json;
    }
    return {
        
        'costActual': json['cost_actual'],
        'costAll': json['cost_all'],
        'costPending': json['cost_pending'],
        'incomeActual': json['income_actual'],
        'incomePending': json['income_pending'],
        'incomeExpected': json['income_expected'],
        'netActual': json['net_actual'],
    };
}

export function ProductionBudgetTotalsToJSON(json: any): ProductionBudgetTotals {
    return ProductionBudgetTotalsToJSONTyped(json, false);
}

export function ProductionBudgetTotalsToJSONTyped(value?: ProductionBudgetTotals | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cost_actual': value['costActual'],
        'cost_all': value['costAll'],
        'cost_pending': value['costPending'],
        'income_actual': value['incomeActual'],
        'income_pending': value['incomePending'],
        'income_expected': value['incomeExpected'],
        'net_actual': value['netActual'],
    };
}

