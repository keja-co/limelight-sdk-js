/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedCountry
 */
export interface PatchedCountry {
    /**
     * 
     * @type {number}
     * @memberof PatchedCountry
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedCountry
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedCountry
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedCountry
     */
    archiveAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedCountry
     */
    name?: string;
    /**
     * ISO 3166-1 alpha-3 country code
     * @type {string}
     * @memberof PatchedCountry
     */
    isoCode?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedCountry
     */
    tenantId?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedCountry
     */
    createdBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedCountry
     */
    updatedBy?: number | null;
}

/**
 * Check if a given object implements the PatchedCountry interface.
 */
export function instanceOfPatchedCountry(value: object): value is PatchedCountry {
    return true;
}

export function PatchedCountryFromJSON(json: any): PatchedCountry {
    return PatchedCountryFromJSONTyped(json, false);
}

export function PatchedCountryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedCountry {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'isoCode': json['iso_code'] == null ? undefined : json['iso_code'],
        'tenantId': json['tenant_id'] == null ? undefined : json['tenant_id'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}

export function PatchedCountryToJSON(json: any): PatchedCountry {
    return PatchedCountryToJSONTyped(json, false);
}

export function PatchedCountryToJSONTyped(value?: Omit<PatchedCountry, 'id'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'archive_at': value['archiveAt'] === null ? null : ((value['archiveAt'] as any)?.toISOString()),
        'name': value['name'],
        'iso_code': value['isoCode'],
        'tenant_id': value['tenantId'],
        'created_by': value['createdBy'],
        'updated_by': value['updatedBy'],
    };
}

