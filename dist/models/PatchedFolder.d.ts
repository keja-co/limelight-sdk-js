/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.89
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Subfolder } from './Subfolder';
/**
 *
 * @export
 * @interface PatchedFolder
 */
export interface PatchedFolder {
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    readonly id?: number;
    /**
     *
     * @type {Array<Subfolder>}
     * @memberof PatchedFolder
     */
    subfolders?: Array<Subfolder>;
    /**
     *
     * @type {Date}
     * @memberof PatchedFolder
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedFolder
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedFolder
     */
    readonly archiveAt?: Date | null;
    /**
     *
     * @type {string}
     * @memberof PatchedFolder
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    readonly tenant?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    readonly createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    readonly updatedBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    repo?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedFolder
     */
    parent?: number | null;
}
/**
 * Check if a given object implements the PatchedFolder interface.
 */
export declare function instanceOfPatchedFolder(value: object): value is PatchedFolder;
export declare function PatchedFolderFromJSON(json: any): PatchedFolder;
export declare function PatchedFolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedFolder;
export declare function PatchedFolderToJSON(json: any): PatchedFolder;
export declare function PatchedFolderToJSONTyped(value?: Omit<PatchedFolder, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
