/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.30
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PatchedContextKey
 */
export interface PatchedContextKey {
    /**
     *
     * @type {number}
     * @memberof PatchedContextKey
     */
    readonly id?: number;
    /**
     *
     * @type {Date}
     * @memberof PatchedContextKey
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedContextKey
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedContextKey
     */
    archiveAt?: Date | null;
    /**
     *
     * @type {string}
     * @memberof PatchedContextKey
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedContextKey
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedContextKey
     */
    appName?: string;
    /**
     *
     * @type {number}
     * @memberof PatchedContextKey
     */
    tenantId?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedContextKey
     */
    createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedContextKey
     */
    updatedBy?: number | null;
}
/**
 * Check if a given object implements the PatchedContextKey interface.
 */
export declare function instanceOfPatchedContextKey(value: object): value is PatchedContextKey;
export declare function PatchedContextKeyFromJSON(json: any): PatchedContextKey;
export declare function PatchedContextKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedContextKey;
export declare function PatchedContextKeyToJSON(json: any): PatchedContextKey;
export declare function PatchedContextKeyToJSONTyped(value?: Omit<PatchedContextKey, 'id' | 'created_at' | 'updated_at'> | null, ignoreDiscriminator?: boolean): any;
