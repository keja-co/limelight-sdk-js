/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.103
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Reimbursement } from './Reimbursement';
/**
 *
 * @export
 * @interface PaginatedReimbursementList
 */
export interface PaginatedReimbursementList {
    /**
     *
     * @type {number}
     * @memberof PaginatedReimbursementList
     */
    count: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedReimbursementList
     */
    next?: string;
    /**
     *
     * @type {string}
     * @memberof PaginatedReimbursementList
     */
    previous?: string;
    /**
     *
     * @type {Array<Reimbursement>}
     * @memberof PaginatedReimbursementList
     */
    results: Array<Reimbursement>;
    /**
     *
     * @type {number}
     * @memberof PaginatedReimbursementList
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedReimbursementList
     */
    pageSize?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedReimbursementList
     */
    pageCount?: number;
}
/**
 * Check if a given object implements the PaginatedReimbursementList interface.
 */
export declare function instanceOfPaginatedReimbursementList(value: object): value is PaginatedReimbursementList;
export declare function PaginatedReimbursementListFromJSON(json: any): PaginatedReimbursementList;
export declare function PaginatedReimbursementListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedReimbursementList;
export declare function PaginatedReimbursementListToJSON(json: any): PaginatedReimbursementList;
export declare function PaginatedReimbursementListToJSONTyped(value?: PaginatedReimbursementList | null, ignoreDiscriminator?: boolean): any;
