"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.77
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedPurchase = instanceOfPatchedPurchase;
exports.PatchedPurchaseFromJSON = PatchedPurchaseFromJSON;
exports.PatchedPurchaseFromJSONTyped = PatchedPurchaseFromJSONTyped;
exports.PatchedPurchaseToJSON = PatchedPurchaseToJSON;
exports.PatchedPurchaseToJSONTyped = PatchedPurchaseToJSONTyped;
var PurchaseMethodEnum_1 = require("./PurchaseMethodEnum");
var CurrencyEnum_1 = require("./CurrencyEnum");
/**
 * Check if a given object implements the PatchedPurchase interface.
 */
function instanceOfPatchedPurchase(value) {
    return true;
}
function PatchedPurchaseFromJSON(json) {
    return PatchedPurchaseFromJSONTyped(json, false);
}
function PatchedPurchaseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'title': json['title'] == null ? undefined : json['title'],
        'customerFirstName': json['customer_first_name'] == null ? undefined : json['customer_first_name'],
        'customerLastName': json['customer_last_name'] == null ? undefined : json['customer_last_name'],
        'customerEmail': json['customer_email'] == null ? undefined : json['customer_email'],
        'customerPhone': json['customer_phone'] == null ? undefined : json['customer_phone'],
        'customerAddress': json['customer_address'] == null ? undefined : json['customer_address'],
        'purchaseMethod': json['purchase_method'] == null ? undefined : (0, PurchaseMethodEnum_1.PurchaseMethodEnumFromJSON)(json['purchase_method']),
        'currency': json['currency'] == null ? undefined : (0, CurrencyEnum_1.CurrencyEnumFromJSON)(json['currency']),
        'subtotalAmount': json['subtotal_amount'] == null ? undefined : json['subtotal_amount'],
        'discountAmount': json['discount_amount'] == null ? undefined : json['discount_amount'],
        'bookingFee': json['booking_fee'] == null ? undefined : json['booking_fee'],
        'totalAmount': json['total_amount'] == null ? undefined : json['total_amount'],
        'paymentReference': json['payment_reference'] == null ? undefined : json['payment_reference'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'discountApplied': json['discount_applied'] == null ? undefined : json['discount_applied'],
    };
}
function PatchedPurchaseToJSON(json) {
    return PatchedPurchaseToJSONTyped(json, false);
}
function PatchedPurchaseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'title': value['title'],
        'customer_first_name': value['customerFirstName'],
        'customer_last_name': value['customerLastName'],
        'customer_email': value['customerEmail'],
        'customer_phone': value['customerPhone'],
        'customer_address': value['customerAddress'],
        'purchase_method': (0, PurchaseMethodEnum_1.PurchaseMethodEnumToJSON)(value['purchaseMethod']),
        'currency': (0, CurrencyEnum_1.CurrencyEnumToJSON)(value['currency']),
        'subtotal_amount': value['subtotalAmount'],
        'discount_amount': value['discountAmount'],
        'booking_fee': value['bookingFee'],
        'total_amount': value['totalAmount'],
        'payment_reference': value['paymentReference'],
        'discount_applied': value['discountApplied'],
    };
}
