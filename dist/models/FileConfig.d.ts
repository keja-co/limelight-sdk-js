/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.73
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FileType } from './FileType';
/**
 *
 * @export
 * @interface FileConfig
 */
export interface FileConfig {
    /**
     * List of allowed file types (e.g., 'image', 'document', 'video', 'audio', 'all')
     * @type {Array<FileType>}
     * @memberof FileConfig
     */
    allowedFileTypes?: Array<FileType>;
    /**
     * Maximum file size in bytes (default is 10MB, cannot be more than 100MB)
     * @type {number}
     * @memberof FileConfig
     */
    maxFileSize?: number;
    /**
     * Whether multiple file uploads are allowed
     * @type {boolean}
     * @memberof FileConfig
     */
    allowMultiple?: boolean;
}
/**
 * Check if a given object implements the FileConfig interface.
 */
export declare function instanceOfFileConfig(value: object): value is FileConfig;
export declare function FileConfigFromJSON(json: any): FileConfig;
export declare function FileConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileConfig;
export declare function FileConfigToJSON(json: any): FileConfig;
export declare function FileConfigToJSONTyped(value?: FileConfig | null, ignoreDiscriminator?: boolean): any;
