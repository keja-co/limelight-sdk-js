"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.93
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSlot = instanceOfSlot;
exports.SlotFromJSON = SlotFromJSON;
exports.SlotFromJSONTyped = SlotFromJSONTyped;
exports.SlotToJSON = SlotToJSON;
exports.SlotToJSONTyped = SlotToJSONTyped;
/**
 * Check if a given object implements the Slot interface.
 */
function instanceOfSlot(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('startTime' in value) || value['startTime'] === undefined)
        return false;
    if (!('endTime' in value) || value['endTime'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    if (!('audition' in value) || value['audition'] === undefined)
        return false;
    return true;
}
function SlotFromJSON(json) {
    return SlotFromJSONTyped(json, false);
}
function SlotFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'startTime': (new Date(json['start_time'])),
        'endTime': (new Date(json['end_time'])),
        'limit': json['limit'] == null ? undefined : json['limit'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'audition': json['audition'],
    };
}
function SlotToJSON(json) {
    return SlotToJSONTyped(json, false);
}
function SlotToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'start_time': ((value['startTime']).toISOString()),
        'end_time': ((value['endTime']).toISOString()),
        'limit': value['limit'],
        'notes': value['notes'],
        'audition': value['audition'],
    };
}
