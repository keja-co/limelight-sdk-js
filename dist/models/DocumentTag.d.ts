/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.105
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Tag } from './Tag';
import type { Document } from './Document';
/**
 *
 * @export
 * @interface DocumentTag
 */
export interface DocumentTag {
    /**
     *
     * @type {number}
     * @memberof DocumentTag
     */
    readonly id: number;
    /**
     *
     * @type {Tag}
     * @memberof DocumentTag
     */
    readonly tag: Tag;
    /**
     *
     * @type {Document}
     * @memberof DocumentTag
     */
    readonly document: Document;
    /**
     *
     * @type {Date}
     * @memberof DocumentTag
     */
    readonly createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof DocumentTag
     */
    readonly updatedAt: Date;
    /**
     *
     * @type {Date}
     * @memberof DocumentTag
     */
    readonly archiveAt: Date | null;
    /**
     *
     * @type {number}
     * @memberof DocumentTag
     */
    readonly tenant: number;
    /**
     *
     * @type {number}
     * @memberof DocumentTag
     */
    readonly createdBy: number | null;
    /**
     *
     * @type {number}
     * @memberof DocumentTag
     */
    readonly updatedBy: number | null;
}
/**
 * Check if a given object implements the DocumentTag interface.
 */
export declare function instanceOfDocumentTag(value: object): value is DocumentTag;
export declare function DocumentTagFromJSON(json: any): DocumentTag;
export declare function DocumentTagFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentTag;
export declare function DocumentTagToJSON(json: any): DocumentTag;
export declare function DocumentTagToJSONTyped(value?: Omit<DocumentTag, 'id' | 'tag' | 'document' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
