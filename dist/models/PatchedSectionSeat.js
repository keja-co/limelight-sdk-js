"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.74
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedSectionSeat = instanceOfPatchedSectionSeat;
exports.PatchedSectionSeatFromJSON = PatchedSectionSeatFromJSON;
exports.PatchedSectionSeatFromJSONTyped = PatchedSectionSeatFromJSONTyped;
exports.PatchedSectionSeatToJSON = PatchedSectionSeatToJSON;
exports.PatchedSectionSeatToJSONTyped = PatchedSectionSeatToJSONTyped;
var Section_1 = require("./Section");
/**
 * Check if a given object implements the PatchedSectionSeat interface.
 */
function instanceOfPatchedSectionSeat(value) {
    return true;
}
function PatchedSectionSeatFromJSON(json) {
    return PatchedSectionSeatFromJSONTyped(json, false);
}
function PatchedSectionSeatFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'section': json['section'] == null ? undefined : (0, Section_1.SectionFromJSON)(json['section']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'seatCode': json['seat_code'] == null ? undefined : json['seat_code'],
        'row': json['row'] == null ? undefined : json['row'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'obstructedView': json['obstructed_view'] == null ? undefined : json['obstructed_view'],
        'displayXPosition': json['display_x_position'] == null ? undefined : json['display_x_position'],
        'displayYPosition': json['display_y_position'] == null ? undefined : json['display_y_position'],
        'accessible': json['accessible'] == null ? undefined : json['accessible'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}
function PatchedSectionSeatToJSON(json) {
    return PatchedSectionSeatToJSONTyped(json, false);
}
function PatchedSectionSeatToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'seat_code': value['seatCode'],
        'row': value['row'],
        'notes': value['notes'],
        'obstructed_view': value['obstructedView'],
        'display_x_position': value['displayXPosition'],
        'display_y_position': value['displayYPosition'],
        'accessible': value['accessible'],
    };
}
