/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExpensePaymentMethodEnum } from './ExpensePaymentMethodEnum';
import type { ExpenseStatusEnum } from './ExpenseStatusEnum';
/**
 *
 * @export
 * @interface Expense
 */
export interface Expense {
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly id: number;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly purchaserName: string | null;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly approverName: string | null;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly vendorName: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly categoryName: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly prodCategoryName: string;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly productionId: number;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly productionName: string;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly attachmentsCount: number;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly reimbursedAmount: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    readonly pendingReimbursementAmount: string;
    /**
     *
     * @type {Date}
     * @memberof Expense
     */
    readonly createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Expense
     */
    readonly updatedAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Expense
     */
    readonly archiveAt: Date | null;
    /**
     *
     * @type {Date}
     * @memberof Expense
     */
    approvedDateTime?: Date | null;
    /**
     *
     * @type {ExpenseStatusEnum}
     * @memberof Expense
     */
    status?: ExpenseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    title: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    cost: string;
    /**
     *
     * @type {Date}
     * @memberof Expense
     */
    expenseDateTime: Date;
    /**
     *
     * @type {ExpensePaymentMethodEnum}
     * @memberof Expense
     */
    paymentMethod: ExpensePaymentMethodEnum;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    notes?: string;
    /**
     *
     * @type {string}
     * @memberof Expense
     */
    receiptNumber?: string;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly tenant: number;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly createdBy: number | null;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    readonly updatedBy: number | null;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    purchaser: number;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    approver?: number | null;
    /**
     * The Expense Category this expense belongs to. Either this or `prod_category` must be set (but not both).
     * @type {number}
     * @memberof Expense
     */
    category?: number | null;
    /**
     * The Production Expense Category this expense belongs to (if the expense belongs to a production). Either this or `category` must be set (but not both).
     * @type {number}
     * @memberof Expense
     */
    prodCategory?: number | null;
    /**
     *
     * @type {number}
     * @memberof Expense
     */
    vendor?: number | null;
}
/**
 * Check if a given object implements the Expense interface.
 */
export declare function instanceOfExpense(value: object): value is Expense;
export declare function ExpenseFromJSON(json: any): Expense;
export declare function ExpenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Expense;
export declare function ExpenseToJSON(json: any): Expense;
export declare function ExpenseToJSONTyped(value?: Omit<Expense, 'id' | 'purchaser_name' | 'approver_name' | 'vendor_name' | 'category_name' | 'prod_category_name' | 'production_id' | 'production_name' | 'attachments_count' | 'reimbursed_amount' | 'pending_reimbursement_amount' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
