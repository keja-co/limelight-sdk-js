/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.105
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExpensePaymentMethodEnum } from './ExpensePaymentMethodEnum';
import type { ExpenseStatusEnum } from './ExpenseStatusEnum';
/**
 *
 * @export
 * @interface PatchedExpense
 */
export interface PatchedExpense {
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    readonly id?: number;
    /**
     *
     * @type {Date}
     * @memberof PatchedExpense
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedExpense
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedExpense
     */
    readonly archiveAt?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof PatchedExpense
     */
    approvedDateTime?: Date | null;
    /**
     *
     * @type {ExpenseStatusEnum}
     * @memberof PatchedExpense
     */
    status?: ExpenseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof PatchedExpense
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedExpense
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedExpense
     */
    cost?: string;
    /**
     *
     * @type {Date}
     * @memberof PatchedExpense
     */
    expenseDateTime?: Date;
    /**
     *
     * @type {ExpensePaymentMethodEnum}
     * @memberof PatchedExpense
     */
    paymentMethod?: ExpensePaymentMethodEnum;
    /**
     *
     * @type {string}
     * @memberof PatchedExpense
     */
    notes?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedExpense
     */
    receiptNumber?: string;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    readonly tenant?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    readonly createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    readonly updatedBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    purchaser?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    approver?: number | null;
    /**
     * The Expense Category this expense belongs to. Either this or `prod_category` must be set (but not both).
     * @type {number}
     * @memberof PatchedExpense
     */
    category?: number | null;
    /**
     * The Production Expense Category this expense belongs to (if the expense belongs to a production). Either this or `category` must be set (but not both).
     * @type {number}
     * @memberof PatchedExpense
     */
    prodCategory?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedExpense
     */
    vendor?: number | null;
}
/**
 * Check if a given object implements the PatchedExpense interface.
 */
export declare function instanceOfPatchedExpense(value: object): value is PatchedExpense;
export declare function PatchedExpenseFromJSON(json: any): PatchedExpense;
export declare function PatchedExpenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedExpense;
export declare function PatchedExpenseToJSON(json: any): PatchedExpense;
export declare function PatchedExpenseToJSONTyped(value?: Omit<PatchedExpense, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
