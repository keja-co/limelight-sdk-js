"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.110
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfReimbursement = instanceOfReimbursement;
exports.ReimbursementFromJSON = ReimbursementFromJSON;
exports.ReimbursementFromJSONTyped = ReimbursementFromJSONTyped;
exports.ReimbursementToJSON = ReimbursementToJSON;
exports.ReimbursementToJSONTyped = ReimbursementToJSONTyped;
var ReimbursementStatusEnum_1 = require("./ReimbursementStatusEnum");
/**
 * Check if a given object implements the Reimbursement interface.
 */
function instanceOfReimbursement(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    return true;
}
function ReimbursementFromJSON(json) {
    return ReimbursementFromJSONTyped(json, false);
}
function ReimbursementFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'approvedDateTime': json['approved_date_time'] == null ? undefined : (new Date(json['approved_date_time'])),
        'amount': json['amount'],
        'scheduledDate': json['scheduled_date'] == null ? undefined : (new Date(json['scheduled_date'])),
        'processedDate': json['processed_date'] == null ? undefined : (new Date(json['processed_date'])),
        'status': json['status'] == null ? undefined : (0, ReimbursementStatusEnum_1.ReimbursementStatusEnumFromJSON)(json['status']),
        'paymentReference': json['payment_reference'] == null ? undefined : json['payment_reference'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'payee': json['payee'] == null ? undefined : json['payee'],
        'approver': json['approver'] == null ? undefined : json['approver'],
        'expense': json['expense'] == null ? undefined : json['expense'],
    };
}
function ReimbursementToJSON(json) {
    return ReimbursementToJSONTyped(json, false);
}
function ReimbursementToJSONTyped(value, ignoreDiscriminator) {
    var _a, _b;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'approved_date_time': value['approvedDateTime'] == null ? undefined : ((value['approvedDateTime']).toISOString()),
        'amount': value['amount'],
        'scheduled_date': value['scheduledDate'] === null ? null : ((_a = value['scheduledDate']) === null || _a === void 0 ? void 0 : _a.toISOString().substring(0, 10)),
        'processed_date': value['processedDate'] === null ? null : ((_b = value['processedDate']) === null || _b === void 0 ? void 0 : _b.toISOString().substring(0, 10)),
        'status': (0, ReimbursementStatusEnum_1.ReimbursementStatusEnumToJSON)(value['status']),
        'payment_reference': value['paymentReference'],
        'notes': value['notes'],
        'payee': value['payee'],
        'approver': value['approver'],
        'expense': value['expense'],
    };
}
