"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.73
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSectionSeat = instanceOfSectionSeat;
exports.SectionSeatFromJSON = SectionSeatFromJSON;
exports.SectionSeatFromJSONTyped = SectionSeatFromJSONTyped;
exports.SectionSeatToJSON = SectionSeatToJSON;
exports.SectionSeatToJSONTyped = SectionSeatToJSONTyped;
var Section_1 = require("./Section");
/**
 * Check if a given object implements the SectionSeat interface.
 */
function instanceOfSectionSeat(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('section' in value) || value['section'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('seatCode' in value) || value['seatCode'] === undefined)
        return false;
    if (!('row' in value) || value['row'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    return true;
}
function SectionSeatFromJSON(json) {
    return SectionSeatFromJSONTyped(json, false);
}
function SectionSeatFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'section': (0, Section_1.SectionFromJSON)(json['section']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'seatCode': json['seat_code'],
        'row': json['row'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'obstructedView': json['obstructed_view'] == null ? undefined : json['obstructed_view'],
        'displayXPosition': json['display_x_position'] == null ? undefined : json['display_x_position'],
        'displayYPosition': json['display_y_position'] == null ? undefined : json['display_y_position'],
        'accessible': json['accessible'] == null ? undefined : json['accessible'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}
function SectionSeatToJSON(json) {
    return SectionSeatToJSONTyped(json, false);
}
function SectionSeatToJSONTyped(value, ignoreDiscriminator) {
    var _a;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'archive_at': value['archiveAt'] === null ? null : ((_a = value['archiveAt']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'seat_code': value['seatCode'],
        'row': value['row'],
        'notes': value['notes'],
        'obstructed_view': value['obstructedView'],
        'display_x_position': value['displayXPosition'],
        'display_y_position': value['displayYPosition'],
        'accessible': value['accessible'],
        'tenant': value['tenant'],
        'updated_by': value['updatedBy'],
    };
}
