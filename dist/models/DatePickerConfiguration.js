"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDatePickerConfiguration = instanceOfDatePickerConfiguration;
exports.DatePickerConfigurationFromJSON = DatePickerConfigurationFromJSON;
exports.DatePickerConfigurationFromJSONTyped = DatePickerConfigurationFromJSONTyped;
exports.DatePickerConfigurationToJSON = DatePickerConfigurationToJSON;
exports.DatePickerConfigurationToJSONTyped = DatePickerConfigurationToJSONTyped;
/**
 * Check if a given object implements the DatePickerConfiguration interface.
 */
function instanceOfDatePickerConfiguration(value) {
    return true;
}
function DatePickerConfigurationFromJSON(json) {
    return DatePickerConfigurationFromJSONTyped(json, false);
}
function DatePickerConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'minDate': json['min_date'] == null ? undefined : (new Date(json['min_date'])),
        'maxDate': json['max_date'] == null ? undefined : (new Date(json['max_date'])),
    };
}
function DatePickerConfigurationToJSON(json) {
    return DatePickerConfigurationToJSONTyped(json, false);
}
function DatePickerConfigurationToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'min_date': value['minDate'] == null ? value['minDate'] : value['minDate'].toISOString().substring(0, 10),
        'max_date': value['maxDate'] == null ? value['maxDate'] : value['maxDate'].toISOString().substring(0, 10),
    };
}
