"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.73
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAssignment = instanceOfAssignment;
exports.AssignmentFromJSON = AssignmentFromJSON;
exports.AssignmentFromJSONTyped = AssignmentFromJSONTyped;
exports.AssignmentToJSON = AssignmentToJSON;
exports.AssignmentToJSONTyped = AssignmentToJSONTyped;
/**
 * Check if a given object implements the Assignment interface.
 */
function instanceOfAssignment(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('startDate' in value) || value['startDate'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('asset' in value) || value['asset'] === undefined)
        return false;
    return true;
}
function AssignmentFromJSON(json) {
    return AssignmentFromJSONTyped(json, false);
}
function AssignmentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'startDate': (new Date(json['start_date'])),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'asset': json['asset'],
        'user': json['user'] == null ? undefined : json['user'],
        'production': json['production'] == null ? undefined : json['production'],
    };
}
function AssignmentToJSON(json) {
    return AssignmentToJSONTyped(json, false);
}
function AssignmentToJSONTyped(value, ignoreDiscriminator) {
    var _a, _b;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'archive_at': value['archiveAt'] === null ? null : ((_a = value['archiveAt']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'start_date': ((value['startDate']).toISOString()),
        'end_date': value['endDate'] === null ? null : ((_b = value['endDate']) === null || _b === void 0 ? void 0 : _b.toISOString()),
        'tenant': value['tenant'],
        'updated_by': value['updatedBy'],
        'asset': value['asset'],
        'user': value['user'],
        'production': value['production'],
    };
}
