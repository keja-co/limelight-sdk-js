/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.108
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PatchedVenueTag
 */
export interface PatchedVenueTag {
    /**
     *
     * @type {number}
     * @memberof PatchedVenueTag
     */
    readonly id?: number;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenueTag
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenueTag
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenueTag
     */
    readonly archiveAt?: Date | null;
    /**
     * Name of the tag
     * @type {string}
     * @memberof PatchedVenueTag
     */
    name?: string;
    /**
     * Description of the tag
     * @type {string}
     * @memberof PatchedVenueTag
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof PatchedVenueTag
     */
    readonly tenant?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedVenueTag
     */
    readonly createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedVenueTag
     */
    readonly updatedBy?: number | null;
}
/**
 * Check if a given object implements the PatchedVenueTag interface.
 */
export declare function instanceOfPatchedVenueTag(value: object): value is PatchedVenueTag;
export declare function PatchedVenueTagFromJSON(json: any): PatchedVenueTag;
export declare function PatchedVenueTagFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedVenueTag;
export declare function PatchedVenueTagToJSON(json: any): PatchedVenueTag;
export declare function PatchedVenueTagToJSONTyped(value?: Omit<PatchedVenueTag, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
