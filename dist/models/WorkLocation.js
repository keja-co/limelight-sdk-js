"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfWorkLocation = instanceOfWorkLocation;
exports.WorkLocationFromJSON = WorkLocationFromJSON;
exports.WorkLocationFromJSONTyped = WorkLocationFromJSONTyped;
exports.WorkLocationToJSON = WorkLocationToJSON;
exports.WorkLocationToJSONTyped = WorkLocationToJSONTyped;
/**
 * Check if a given object implements the WorkLocation interface.
 */
function instanceOfWorkLocation(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    if (!('address' in value) || value['address'] === undefined)
        return false;
    return true;
}
function WorkLocationFromJSON(json) {
    return WorkLocationFromJSONTyped(json, false);
}
function WorkLocationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'name': json['name'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'address': json['address'],
    };
}
function WorkLocationToJSON(json) {
    return WorkLocationToJSONTyped(json, false);
}
function WorkLocationToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'address': value['address'],
    };
}
