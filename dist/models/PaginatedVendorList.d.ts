/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Vendor } from './Vendor';
/**
 *
 * @export
 * @interface PaginatedVendorList
 */
export interface PaginatedVendorList {
    /**
     *
     * @type {number}
     * @memberof PaginatedVendorList
     */
    count: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedVendorList
     */
    next?: string;
    /**
     *
     * @type {string}
     * @memberof PaginatedVendorList
     */
    previous?: string;
    /**
     *
     * @type {Array<Vendor>}
     * @memberof PaginatedVendorList
     */
    results: Array<Vendor>;
    /**
     *
     * @type {number}
     * @memberof PaginatedVendorList
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedVendorList
     */
    pageSize?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedVendorList
     */
    pageCount?: number;
}
/**
 * Check if a given object implements the PaginatedVendorList interface.
 */
export declare function instanceOfPaginatedVendorList(value: object): value is PaginatedVendorList;
export declare function PaginatedVendorListFromJSON(json: any): PaginatedVendorList;
export declare function PaginatedVendorListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedVendorList;
export declare function PaginatedVendorListToJSON(json: any): PaginatedVendorList;
export declare function PaginatedVendorListToJSONTyped(value?: PaginatedVendorList | null, ignoreDiscriminator?: boolean): any;
