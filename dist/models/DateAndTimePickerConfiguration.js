"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDateAndTimePickerConfiguration = instanceOfDateAndTimePickerConfiguration;
exports.DateAndTimePickerConfigurationFromJSON = DateAndTimePickerConfigurationFromJSON;
exports.DateAndTimePickerConfigurationFromJSONTyped = DateAndTimePickerConfigurationFromJSONTyped;
exports.DateAndTimePickerConfigurationToJSON = DateAndTimePickerConfigurationToJSON;
exports.DateAndTimePickerConfigurationToJSONTyped = DateAndTimePickerConfigurationToJSONTyped;
/**
 * Check if a given object implements the DateAndTimePickerConfiguration interface.
 */
function instanceOfDateAndTimePickerConfiguration(value) {
    return true;
}
function DateAndTimePickerConfigurationFromJSON(json) {
    return DateAndTimePickerConfigurationFromJSONTyped(json, false);
}
function DateAndTimePickerConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'minDatetime': json['min_datetime'] == null ? undefined : (new Date(json['min_datetime'])),
        'maxDatetime': json['max_datetime'] == null ? undefined : (new Date(json['max_datetime'])),
    };
}
function DateAndTimePickerConfigurationToJSON(json) {
    return DateAndTimePickerConfigurationToJSONTyped(json, false);
}
function DateAndTimePickerConfigurationToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'min_datetime': value['minDatetime'] == null ? value['minDatetime'] : value['minDatetime'].toISOString(),
        'max_datetime': value['maxDatetime'] == null ? value['maxDatetime'] : value['maxDatetime'].toISOString(),
    };
}
