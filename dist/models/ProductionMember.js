"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.22
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProductionMember = instanceOfProductionMember;
exports.ProductionMemberFromJSON = ProductionMemberFromJSON;
exports.ProductionMemberFromJSONTyped = ProductionMemberFromJSONTyped;
exports.ProductionMemberToJSON = ProductionMemberToJSON;
exports.ProductionMemberToJSONTyped = ProductionMemberToJSONTyped;
/**
 * Check if a given object implements the ProductionMember interface.
 */
function instanceOfProductionMember(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('production' in value) || value['production'] === undefined)
        return false;
    if (!('member' in value) || value['member'] === undefined)
        return false;
    return true;
}
function ProductionMemberFromJSON(json) {
    return ProductionMemberFromJSONTyped(json, false);
}
function ProductionMemberFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'tenantId': json['tenant_id'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'production': json['production'],
        'member': json['member'],
    };
}
function ProductionMemberToJSON(json) {
    return ProductionMemberToJSONTyped(json, false);
}
function ProductionMemberToJSONTyped(value, ignoreDiscriminator) {
    var _a;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'archive_at': value['archiveAt'] === null ? null : ((_a = value['archiveAt']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'updated_by': value['updatedBy'],
        'production': value['production'],
        'member': value['member'],
    };
}
