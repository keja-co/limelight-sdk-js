/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ReimbursementStatusEnum } from './ReimbursementStatusEnum';
/**
 *
 * @export
 * @interface Reimbursement
 */
export interface Reimbursement {
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    readonly id: number;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    readonly payeeName: string | null;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    readonly approverName: string | null;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    readonly expenseTitle: string;
    /**
     *
     * @type {boolean}
     * @memberof Reimbursement
     */
    readonly expenseIsProduction: boolean;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    readonly productionId: number;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    readonly productionName: string;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    readonly createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    readonly updatedAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    readonly archiveAt: Date | null;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    approvedDateTime?: Date;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    amount: string;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    scheduledDate?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof Reimbursement
     */
    processedDate?: Date | null;
    /**
     *
     * @type {ReimbursementStatusEnum}
     * @memberof Reimbursement
     */
    status?: ReimbursementStatusEnum;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    paymentReference?: string;
    /**
     *
     * @type {string}
     * @memberof Reimbursement
     */
    notes?: string;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    readonly tenant: number;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    readonly createdBy: number | null;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    readonly updatedBy: number | null;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    payee?: number | null;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    approver?: number | null;
    /**
     *
     * @type {number}
     * @memberof Reimbursement
     */
    expense?: number | null;
}
/**
 * Check if a given object implements the Reimbursement interface.
 */
export declare function instanceOfReimbursement(value: object): value is Reimbursement;
export declare function ReimbursementFromJSON(json: any): Reimbursement;
export declare function ReimbursementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reimbursement;
export declare function ReimbursementToJSON(json: any): Reimbursement;
export declare function ReimbursementToJSONTyped(value?: Omit<Reimbursement, 'id' | 'payee_name' | 'approver_name' | 'expense_title' | 'expense_is_production' | 'production_id' | 'production_name' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
