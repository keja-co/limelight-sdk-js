/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.99
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Submission } from './Submission';
/**
 *
 * @export
 * @interface PaginatedSubmissionList
 */
export interface PaginatedSubmissionList {
    /**
     *
     * @type {number}
     * @memberof PaginatedSubmissionList
     */
    count: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedSubmissionList
     */
    next?: string;
    /**
     *
     * @type {string}
     * @memberof PaginatedSubmissionList
     */
    previous?: string;
    /**
     *
     * @type {Array<Submission>}
     * @memberof PaginatedSubmissionList
     */
    results: Array<Submission>;
    /**
     *
     * @type {number}
     * @memberof PaginatedSubmissionList
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedSubmissionList
     */
    pageSize?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedSubmissionList
     */
    pageCount?: number;
}
/**
 * Check if a given object implements the PaginatedSubmissionList interface.
 */
export declare function instanceOfPaginatedSubmissionList(value: object): value is PaginatedSubmissionList;
export declare function PaginatedSubmissionListFromJSON(json: any): PaginatedSubmissionList;
export declare function PaginatedSubmissionListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedSubmissionList;
export declare function PaginatedSubmissionListToJSON(json: any): PaginatedSubmissionList;
export declare function PaginatedSubmissionListToJSONTyped(value?: PaginatedSubmissionList | null, ignoreDiscriminator?: boolean): any;
