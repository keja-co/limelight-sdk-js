"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedTicket = instanceOfPatchedTicket;
exports.PatchedTicketFromJSON = PatchedTicketFromJSON;
exports.PatchedTicketFromJSONTyped = PatchedTicketFromJSONTyped;
exports.PatchedTicketToJSON = PatchedTicketToJSON;
exports.PatchedTicketToJSONTyped = PatchedTicketToJSONTyped;
var TicketStatusEnum_1 = require("./TicketStatusEnum");
var Purchase_1 = require("./Purchase");
var SectionSeat_1 = require("./SectionSeat");
var TicketType_1 = require("./TicketType");
/**
 * Check if a given object implements the PatchedTicket interface.
 */
function instanceOfPatchedTicket(value) {
    return true;
}
function PatchedTicketFromJSON(json) {
    return PatchedTicketFromJSONTyped(json, false);
}
function PatchedTicketFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'sectionSeat': json['section_seat'] == null ? undefined : (0, SectionSeat_1.SectionSeatFromJSON)(json['section_seat']),
        'ticketType': json['ticket_type'] == null ? undefined : (0, TicketType_1.TicketTypeFromJSON)(json['ticket_type']),
        'purchase': json['purchase'] == null ? undefined : (0, Purchase_1.PurchaseFromJSON)(json['purchase']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'ticketUuid': json['ticket_uuid'] == null ? undefined : json['ticket_uuid'],
        'status': json['status'] == null ? undefined : (0, TicketStatusEnum_1.TicketStatusEnumFromJSON)(json['status']),
        'price': json['price'] == null ? undefined : json['price'],
        'checkedInAt': json['checked_in_at'] == null ? undefined : (new Date(json['checked_in_at'])),
        'checkedInByAlias': json['checked_in_by_alias'] == null ? undefined : json['checked_in_by_alias'],
        'checkedInLocation': json['checked_in_location'] == null ? undefined : json['checked_in_location'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'performance': json['performance'] == null ? undefined : json['performance'],
        'section': json['section'] == null ? undefined : json['section'],
        'seat': json['seat'] == null ? undefined : json['seat'],
        'checkedInByUser': json['checked_in_by_user'] == null ? undefined : json['checked_in_by_user'],
    };
}
function PatchedTicketToJSON(json) {
    return PatchedTicketToJSONTyped(json, false);
}
function PatchedTicketToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'status': (0, TicketStatusEnum_1.TicketStatusEnumToJSON)(value['status']),
        'price': value['price'],
        'checked_in_at': value['checkedInAt'] == null ? value['checkedInAt'] : value['checkedInAt'].toISOString(),
        'checked_in_by_alias': value['checkedInByAlias'],
        'checked_in_location': value['checkedInLocation'],
        'performance': value['performance'],
        'section': value['section'],
        'seat': value['seat'],
        'checked_in_by_user': value['checkedInByUser'],
    };
}
