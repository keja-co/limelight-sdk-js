"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.87
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedAsset = instanceOfPatchedAsset;
exports.PatchedAssetFromJSON = PatchedAssetFromJSON;
exports.PatchedAssetFromJSONTyped = PatchedAssetFromJSONTyped;
exports.PatchedAssetToJSON = PatchedAssetToJSON;
exports.PatchedAssetToJSONTyped = PatchedAssetToJSONTyped;
var AssetTypeEnum_1 = require("./AssetTypeEnum");
var ConditionEnum_1 = require("./ConditionEnum");
/**
 * Check if a given object implements the PatchedAsset interface.
 */
function instanceOfPatchedAsset(value) {
    return true;
}
function PatchedAssetFromJSON(json) {
    return PatchedAssetFromJSONTyped(json, false);
}
function PatchedAssetFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : (0, AssetTypeEnum_1.AssetTypeEnumFromJSON)(json['type']),
        'description': json['description'] == null ? undefined : json['description'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'value': json['value'] == null ? undefined : json['value'],
        'condition': json['condition'] == null ? undefined : (0, ConditionEnum_1.ConditionEnumFromJSON)(json['condition']),
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'owningUser': json['owning_user'] == null ? undefined : json['owning_user'],
    };
}
function PatchedAssetToJSON(json) {
    return PatchedAssetToJSONTyped(json, false);
}
function PatchedAssetToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'type': (0, AssetTypeEnum_1.AssetTypeEnumToJSON)(value['type']),
        'description': value['description'],
        'notes': value['notes'],
        'value': value['value'],
        'condition': (0, ConditionEnum_1.ConditionEnumToJSON)(value['condition']),
        'owning_user': value['owningUser'],
    };
}
