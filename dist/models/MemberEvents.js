"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.108
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMemberEvents = instanceOfMemberEvents;
exports.MemberEventsFromJSON = MemberEventsFromJSON;
exports.MemberEventsFromJSONTyped = MemberEventsFromJSONTyped;
exports.MemberEventsToJSON = MemberEventsToJSON;
exports.MemberEventsToJSONTyped = MemberEventsToJSONTyped;
var RehearsalWithParticipantRead_1 = require("./RehearsalWithParticipantRead");
/**
 * Check if a given object implements the MemberEvents interface.
 */
function instanceOfMemberEvents(value) {
    if (!('rehearsals' in value) || value['rehearsals'] === undefined)
        return false;
    if (!('performances' in value) || value['performances'] === undefined)
        return false;
    return true;
}
function MemberEventsFromJSON(json) {
    return MemberEventsFromJSONTyped(json, false);
}
function MemberEventsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'rehearsals': (json['rehearsals'].map(RehearsalWithParticipantRead_1.RehearsalWithParticipantReadFromJSON)),
        'performances': json['performances'],
    };
}
function MemberEventsToJSON(json) {
    return MemberEventsToJSONTyped(json, false);
}
function MemberEventsToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'rehearsals': (value['rehearsals'].map(RehearsalWithParticipantRead_1.RehearsalWithParticipantReadToJSON)),
        'performances': value['performances'],
    };
}
