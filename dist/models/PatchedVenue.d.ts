/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.83
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Address } from './Address';
/**
 *
 * @export
 * @interface PatchedVenue
 */
export interface PatchedVenue {
    /**
     *
     * @type {number}
     * @memberof PatchedVenue
     */
    readonly id?: number;
    /**
     *
     * @type {Address}
     * @memberof PatchedVenue
     */
    address?: Address;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenue
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenue
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedVenue
     */
    readonly archiveAt?: Date | null;
    /**
     * Name of the venue
     * @type {string}
     * @memberof PatchedVenue
     */
    name?: string;
    /**
     * Additional notes about the venue
     * @type {string}
     * @memberof PatchedVenue
     */
    notes?: string;
    /**
     * Contact person for the venue
     * @type {string}
     * @memberof PatchedVenue
     */
    contactName?: string;
    /**
     * Email address for the venue contact
     * @type {string}
     * @memberof PatchedVenue
     */
    contactEmail?: string;
    /**
     * Contact person for the venue contact
     * @type {string}
     * @memberof PatchedVenue
     */
    contactPhone?: string;
    /**
     * Is the venue currently active?
     * @type {boolean}
     * @memberof PatchedVenue
     */
    isActive?: boolean;
    /**
     *
     * @type {number}
     * @memberof PatchedVenue
     */
    readonly tenant?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedVenue
     */
    readonly createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedVenue
     */
    readonly updatedBy?: number | null;
    /**
     * Tags associated with the venue
     * @type {Array<number>}
     * @memberof PatchedVenue
     */
    tags?: Array<number>;
}
/**
 * Check if a given object implements the PatchedVenue interface.
 */
export declare function instanceOfPatchedVenue(value: object): value is PatchedVenue;
export declare function PatchedVenueFromJSON(json: any): PatchedVenue;
export declare function PatchedVenueFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedVenue;
export declare function PatchedVenueToJSON(json: any): PatchedVenue;
export declare function PatchedVenueToJSONTyped(value?: Omit<PatchedVenue, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
