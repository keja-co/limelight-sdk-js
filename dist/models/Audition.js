"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.104
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAudition = instanceOfAudition;
exports.AuditionFromJSON = AuditionFromJSON;
exports.AuditionFromJSONTyped = AuditionFromJSONTyped;
exports.AuditionToJSON = AuditionToJSON;
exports.AuditionToJSONTyped = AuditionToJSONTyped;
/**
 * Check if a given object implements the Audition interface.
 */
function instanceOfAudition(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    if (!('production' in value) || value['production'] === undefined)
        return false;
    return true;
}
function AuditionFromJSON(json) {
    return AuditionFromJSONTyped(json, false);
}
function AuditionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'name': json['name'],
        'description': json['description'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'production': json['production'],
        'venue': json['venue'] == null ? undefined : json['venue'],
    };
}
function AuditionToJSON(json) {
    return AuditionToJSONTyped(json, false);
}
function AuditionToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'description': value['description'],
        'production': value['production'],
        'venue': value['venue'],
    };
}
