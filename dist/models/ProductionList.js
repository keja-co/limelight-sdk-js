"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.96
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProductionList = instanceOfProductionList;
exports.ProductionListFromJSON = ProductionListFromJSON;
exports.ProductionListFromJSONTyped = ProductionListFromJSONTyped;
exports.ProductionListToJSON = ProductionListToJSON;
exports.ProductionListToJSONTyped = ProductionListToJSONTyped;
var ProductionStatusEnum_1 = require("./ProductionStatusEnum");
/**
 * Check if a given object implements the ProductionList interface.
 */
function instanceOfProductionList(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('venueName' in value) || value['venueName'] === undefined)
        return false;
    if (!('directorName' in value) || value['directorName'] === undefined)
        return false;
    if (!('primaryCategoryName' in value) || value['primaryCategoryName'] === undefined)
        return false;
    if (!('performancesCount' in value) || value['performancesCount'] === undefined)
        return false;
    if (!('rehearsalsCount' in value) || value['rehearsalsCount'] === undefined)
        return false;
    if (!('membersCount' in value) || value['membersCount'] === undefined)
        return false;
    if (!('nextPerformanceDatetime' in value) || value['nextPerformanceDatetime'] === undefined)
        return false;
    return true;
}
function ProductionListFromJSON(json) {
    return ProductionListFromJSONTyped(json, false);
}
function ProductionListFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'name': json['name'],
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'status': json['status'] == null ? undefined : (0, ProductionStatusEnum_1.ProductionStatusEnumFromJSON)(json['status']),
        'venue': json['venue'] == null ? undefined : json['venue'],
        'venueName': json['venue_name'],
        'directorName': json['director_name'],
        'primaryCategoryName': json['primary_category_name'],
        'performancesCount': json['performances_count'],
        'rehearsalsCount': json['rehearsals_count'],
        'membersCount': json['members_count'],
        'nextPerformanceDatetime': (new Date(json['next_performance_datetime'])),
    };
}
function ProductionListToJSON(json) {
    return ProductionListToJSONTyped(json, false);
}
function ProductionListToJSONTyped(value, ignoreDiscriminator) {
    var _a, _b;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'start_date': value['startDate'] === null ? null : ((_a = value['startDate']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'end_date': value['endDate'] === null ? null : ((_b = value['endDate']) === null || _b === void 0 ? void 0 : _b.toISOString()),
        'status': (0, ProductionStatusEnum_1.ProductionStatusEnumToJSON)(value['status']),
        'venue': value['venue'],
    };
}
