"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.109
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPaginatedUserRoleAssignmentList = instanceOfPaginatedUserRoleAssignmentList;
exports.PaginatedUserRoleAssignmentListFromJSON = PaginatedUserRoleAssignmentListFromJSON;
exports.PaginatedUserRoleAssignmentListFromJSONTyped = PaginatedUserRoleAssignmentListFromJSONTyped;
exports.PaginatedUserRoleAssignmentListToJSON = PaginatedUserRoleAssignmentListToJSON;
exports.PaginatedUserRoleAssignmentListToJSONTyped = PaginatedUserRoleAssignmentListToJSONTyped;
var UserRoleAssignment_1 = require("./UserRoleAssignment");
/**
 * Check if a given object implements the PaginatedUserRoleAssignmentList interface.
 */
function instanceOfPaginatedUserRoleAssignmentList(value) {
    if (!('count' in value) || value['count'] === undefined)
        return false;
    if (!('results' in value) || value['results'] === undefined)
        return false;
    return true;
}
function PaginatedUserRoleAssignmentListFromJSON(json) {
    return PaginatedUserRoleAssignmentListFromJSONTyped(json, false);
}
function PaginatedUserRoleAssignmentListFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': (json['results'].map(UserRoleAssignment_1.UserRoleAssignmentFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['page_size'] == null ? undefined : json['page_size'],
        'pageCount': json['page_count'] == null ? undefined : json['page_count'],
    };
}
function PaginatedUserRoleAssignmentListToJSON(json) {
    return PaginatedUserRoleAssignmentListToJSONTyped(json, false);
}
function PaginatedUserRoleAssignmentListToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': (value['results'].map(UserRoleAssignment_1.UserRoleAssignmentToJSON)),
        'page': value['page'],
        'page_size': value['pageSize'],
        'page_count': value['pageCount'],
    };
}
