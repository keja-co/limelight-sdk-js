/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.111
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RehearsalWithParticipantRead
 */
export interface RehearsalWithParticipantRead {
    /**
     *
     * @type {number}
     * @memberof RehearsalWithParticipantRead
     */
    id: number;
    /**
     *
     * @type {number}
     * @memberof RehearsalWithParticipantRead
     */
    production: number;
    /**
     *
     * @type {Date}
     * @memberof RehearsalWithParticipantRead
     */
    startDatetime: Date;
    /**
     *
     * @type {Date}
     * @memberof RehearsalWithParticipantRead
     */
    endDatetime: Date;
    /**
     *
     * @type {number}
     * @memberof RehearsalWithParticipantRead
     */
    venue: number | null;
    /**
     *
     * @type {string}
     * @memberof RehearsalWithParticipantRead
     */
    notes: string;
    /**
     *
     * @type {boolean}
     * @memberof RehearsalWithParticipantRead
     */
    participantIsRequired: boolean;
    /**
     *
     * @type {number}
     * @memberof RehearsalWithParticipantRead
     */
    participantId: number;
}
/**
 * Check if a given object implements the RehearsalWithParticipantRead interface.
 */
export declare function instanceOfRehearsalWithParticipantRead(value: object): value is RehearsalWithParticipantRead;
export declare function RehearsalWithParticipantReadFromJSON(json: any): RehearsalWithParticipantRead;
export declare function RehearsalWithParticipantReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): RehearsalWithParticipantRead;
export declare function RehearsalWithParticipantReadToJSON(json: any): RehearsalWithParticipantRead;
export declare function RehearsalWithParticipantReadToJSONTyped(value?: RehearsalWithParticipantRead | null, ignoreDiscriminator?: boolean): any;
