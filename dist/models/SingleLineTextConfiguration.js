"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.103
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSingleLineTextConfiguration = instanceOfSingleLineTextConfiguration;
exports.SingleLineTextConfigurationFromJSON = SingleLineTextConfigurationFromJSON;
exports.SingleLineTextConfigurationFromJSONTyped = SingleLineTextConfigurationFromJSONTyped;
exports.SingleLineTextConfigurationToJSON = SingleLineTextConfigurationToJSON;
exports.SingleLineTextConfigurationToJSONTyped = SingleLineTextConfigurationToJSONTyped;
/**
 * Check if a given object implements the SingleLineTextConfiguration interface.
 */
function instanceOfSingleLineTextConfiguration(value) {
    return true;
}
function SingleLineTextConfigurationFromJSON(json) {
    return SingleLineTextConfigurationFromJSONTyped(json, false);
}
function SingleLineTextConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'maxLength': json['max_length'] == null ? undefined : json['max_length'],
        'minLength': json['min_length'] == null ? undefined : json['min_length'],
        'lines': json['lines'] == null ? undefined : json['lines'],
        'pattern': json['pattern'] == null ? undefined : json['pattern'],
    };
}
function SingleLineTextConfigurationToJSON(json) {
    return SingleLineTextConfigurationToJSONTyped(json, false);
}
function SingleLineTextConfigurationToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'max_length': value['maxLength'],
        'min_length': value['minLength'],
        'lines': value['lines'],
        'pattern': value['pattern'],
    };
}
