"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedVenueTagAssignment = instanceOfPatchedVenueTagAssignment;
exports.PatchedVenueTagAssignmentFromJSON = PatchedVenueTagAssignmentFromJSON;
exports.PatchedVenueTagAssignmentFromJSONTyped = PatchedVenueTagAssignmentFromJSONTyped;
exports.PatchedVenueTagAssignmentToJSON = PatchedVenueTagAssignmentToJSON;
exports.PatchedVenueTagAssignmentToJSONTyped = PatchedVenueTagAssignmentToJSONTyped;
var Venue_1 = require("./Venue");
var VenueTag_1 = require("./VenueTag");
/**
 * Check if a given object implements the PatchedVenueTagAssignment interface.
 */
function instanceOfPatchedVenueTagAssignment(value) {
    return true;
}
function PatchedVenueTagAssignmentFromJSON(json) {
    return PatchedVenueTagAssignmentFromJSONTyped(json, false);
}
function PatchedVenueTagAssignmentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'venue': json['venue'] == null ? undefined : (0, Venue_1.VenueFromJSON)(json['venue']),
        'tag': json['tag'] == null ? undefined : (0, VenueTag_1.VenueTagFromJSON)(json['tag']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'tenantId': json['tenant_id'] == null ? undefined : json['tenant_id'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}
function PatchedVenueTagAssignmentToJSON(json) {
    return PatchedVenueTagAssignmentToJSONTyped(json, false);
}
function PatchedVenueTagAssignmentToJSONTyped(value, ignoreDiscriminator) {
    var _a;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'venue': (0, Venue_1.VenueToJSON)(value['venue']),
        'tag': (0, VenueTag_1.VenueTagToJSON)(value['tag']),
        'archive_at': value['archiveAt'] === null ? null : ((_a = value['archiveAt']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'updated_by': value['updatedBy'],
    };
}
