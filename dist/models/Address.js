"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAddress = instanceOfAddress;
exports.AddressFromJSON = AddressFromJSON;
exports.AddressFromJSONTyped = AddressFromJSONTyped;
exports.AddressToJSON = AddressToJSON;
exports.AddressToJSONTyped = AddressToJSONTyped;
/**
 * Check if a given object implements the Address interface.
 */
function instanceOfAddress(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('line1' in value) || value['line1'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    if (!('country' in value) || value['country'] === undefined)
        return false;
    return true;
}
function AddressFromJSON(json) {
    return AddressFromJSONTyped(json, false);
}
function AddressFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'line1': json['line_1'],
        'line2': json['line_2'] == null ? undefined : json['line_2'],
        'city': json['city'] == null ? undefined : json['city'],
        'suburb': json['suburb'] == null ? undefined : json['suburb'],
        'postalCode': json['postal_code'] == null ? undefined : json['postal_code'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'],
    };
}
function AddressToJSON(json) {
    return AddressToJSONTyped(json, false);
}
function AddressToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'line_1': value['line1'],
        'line_2': value['line2'],
        'city': value['city'],
        'suburb': value['suburb'],
        'postal_code': value['postalCode'],
        'state': value['state'],
        'country': value['country'],
    };
}
