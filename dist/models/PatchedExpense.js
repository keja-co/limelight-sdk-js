"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedExpense = instanceOfPatchedExpense;
exports.PatchedExpenseFromJSON = PatchedExpenseFromJSON;
exports.PatchedExpenseFromJSONTyped = PatchedExpenseFromJSONTyped;
exports.PatchedExpenseToJSON = PatchedExpenseToJSON;
exports.PatchedExpenseToJSONTyped = PatchedExpenseToJSONTyped;
var ExpensePaymentMethodEnum_1 = require("./ExpensePaymentMethodEnum");
var ExpenseStatusEnum_1 = require("./ExpenseStatusEnum");
/**
 * Check if a given object implements the PatchedExpense interface.
 */
function instanceOfPatchedExpense(value) {
    return true;
}
function PatchedExpenseFromJSON(json) {
    return PatchedExpenseFromJSONTyped(json, false);
}
function PatchedExpenseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'purchaserName': json['purchaser_name'] == null ? undefined : json['purchaser_name'],
        'approverName': json['approver_name'] == null ? undefined : json['approver_name'],
        'vendorName': json['vendor_name'] == null ? undefined : json['vendor_name'],
        'categoryName': json['category_name'] == null ? undefined : json['category_name'],
        'prodCategoryName': json['prod_category_name'] == null ? undefined : json['prod_category_name'],
        'productionId': json['production_id'] == null ? undefined : json['production_id'],
        'productionName': json['production_name'] == null ? undefined : json['production_name'],
        'attachmentsCount': json['attachments_count'] == null ? undefined : json['attachments_count'],
        'reimbursedAmount': json['reimbursed_amount'] == null ? undefined : json['reimbursed_amount'],
        'pendingReimbursementAmount': json['pending_reimbursement_amount'] == null ? undefined : json['pending_reimbursement_amount'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'approvedDateTime': json['approved_date_time'] == null ? undefined : (new Date(json['approved_date_time'])),
        'status': json['status'] == null ? undefined : (0, ExpenseStatusEnum_1.ExpenseStatusEnumFromJSON)(json['status']),
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'expenseDateTime': json['expense_date_time'] == null ? undefined : (new Date(json['expense_date_time'])),
        'paymentMethod': json['payment_method'] == null ? undefined : (0, ExpensePaymentMethodEnum_1.ExpensePaymentMethodEnumFromJSON)(json['payment_method']),
        'notes': json['notes'] == null ? undefined : json['notes'],
        'receiptNumber': json['receipt_number'] == null ? undefined : json['receipt_number'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'purchaser': json['purchaser'] == null ? undefined : json['purchaser'],
        'approver': json['approver'] == null ? undefined : json['approver'],
        'category': json['category'] == null ? undefined : json['category'],
        'prodCategory': json['prod_category'] == null ? undefined : json['prod_category'],
        'vendor': json['vendor'] == null ? undefined : json['vendor'],
    };
}
function PatchedExpenseToJSON(json) {
    return PatchedExpenseToJSONTyped(json, false);
}
function PatchedExpenseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'approved_date_time': value['approvedDateTime'] == null ? value['approvedDateTime'] : value['approvedDateTime'].toISOString(),
        'status': (0, ExpenseStatusEnum_1.ExpenseStatusEnumToJSON)(value['status']),
        'title': value['title'],
        'description': value['description'],
        'cost': value['cost'],
        'expense_date_time': value['expenseDateTime'] == null ? value['expenseDateTime'] : value['expenseDateTime'].toISOString(),
        'payment_method': (0, ExpensePaymentMethodEnum_1.ExpensePaymentMethodEnumToJSON)(value['paymentMethod']),
        'notes': value['notes'],
        'receipt_number': value['receiptNumber'],
        'purchaser': value['purchaser'],
        'approver': value['approver'],
        'category': value['category'],
        'prod_category': value['prodCategory'],
        'vendor': value['vendor'],
    };
}
