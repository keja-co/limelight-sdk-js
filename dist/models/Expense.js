"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.100
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfExpense = instanceOfExpense;
exports.ExpenseFromJSON = ExpenseFromJSON;
exports.ExpenseFromJSONTyped = ExpenseFromJSONTyped;
exports.ExpenseToJSON = ExpenseToJSON;
exports.ExpenseToJSONTyped = ExpenseToJSONTyped;
var ExpensePaymentMethodEnum_1 = require("./ExpensePaymentMethodEnum");
var ExpenseStatusEnum_1 = require("./ExpenseStatusEnum");
/**
 * Check if a given object implements the Expense interface.
 */
function instanceOfExpense(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('archiveAt' in value) || value['archiveAt'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('cost' in value) || value['cost'] === undefined)
        return false;
    if (!('expenseDateTime' in value) || value['expenseDateTime'] === undefined)
        return false;
    if (!('paymentMethod' in value) || value['paymentMethod'] === undefined)
        return false;
    if (!('tenant' in value) || value['tenant'] === undefined)
        return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined)
        return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined)
        return false;
    if (!('purchaser' in value) || value['purchaser'] === undefined)
        return false;
    return true;
}
function ExpenseFromJSON(json) {
    return ExpenseFromJSONTyped(json, false);
}
function ExpenseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'archiveAt': (json['archive_at'] == null ? null : new Date(json['archive_at'])),
        'approvedDateTime': json['approved_date_time'] == null ? undefined : (new Date(json['approved_date_time'])),
        'status': json['status'] == null ? undefined : (0, ExpenseStatusEnum_1.ExpenseStatusEnumFromJSON)(json['status']),
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'cost': json['cost'],
        'expenseDateTime': (new Date(json['expense_date_time'])),
        'paymentMethod': (0, ExpensePaymentMethodEnum_1.ExpensePaymentMethodEnumFromJSON)(json['payment_method']),
        'notes': json['notes'] == null ? undefined : json['notes'],
        'receiptNumber': json['receipt_number'] == null ? undefined : json['receipt_number'],
        'tenant': json['tenant'],
        'createdBy': json['created_by'],
        'updatedBy': json['updated_by'],
        'purchaser': json['purchaser'],
        'approver': json['approver'] == null ? undefined : json['approver'],
        'category': json['category'] == null ? undefined : json['category'],
        'prodCategory': json['prod_category'] == null ? undefined : json['prod_category'],
        'vendor': json['vendor'] == null ? undefined : json['vendor'],
    };
}
function ExpenseToJSON(json) {
    return ExpenseToJSONTyped(json, false);
}
function ExpenseToJSONTyped(value, ignoreDiscriminator) {
    var _a;
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'approved_date_time': value['approvedDateTime'] === null ? null : ((_a = value['approvedDateTime']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'status': (0, ExpenseStatusEnum_1.ExpenseStatusEnumToJSON)(value['status']),
        'title': value['title'],
        'description': value['description'],
        'cost': value['cost'],
        'expense_date_time': ((value['expenseDateTime']).toISOString()),
        'payment_method': (0, ExpensePaymentMethodEnum_1.ExpensePaymentMethodEnumToJSON)(value['paymentMethod']),
        'notes': value['notes'],
        'receipt_number': value['receiptNumber'],
        'purchaser': value['purchaser'],
        'approver': value['approver'],
        'category': value['category'],
        'prod_category': value['prodCategory'],
        'vendor': value['vendor'],
    };
}
