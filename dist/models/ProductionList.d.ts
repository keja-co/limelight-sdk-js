/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.99
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ProductionStatusEnum } from './ProductionStatusEnum';
/**
 *
 * @export
 * @interface ProductionList
 */
export interface ProductionList {
    /**
     *
     * @type {number}
     * @memberof ProductionList
     */
    readonly id: number;
    /**
     *
     * @type {string}
     * @memberof ProductionList
     */
    name: string;
    /**
     *
     * @type {Date}
     * @memberof ProductionList
     */
    startDate?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof ProductionList
     */
    endDate?: Date | null;
    /**
     *
     * @type {ProductionStatusEnum}
     * @memberof ProductionList
     */
    status?: ProductionStatusEnum;
    /**
     * The primary venue for the production, not necessarily where all performances will take place.
     * @type {number}
     * @memberof ProductionList
     */
    venue?: number | null;
    /**
     *
     * @type {string}
     * @memberof ProductionList
     */
    readonly venueName: string;
    /**
     *
     * @type {string}
     * @memberof ProductionList
     */
    readonly directorName: string | null;
    /**
     *
     * @type {string}
     * @memberof ProductionList
     */
    readonly primaryCategoryName: string | null;
    /**
     *
     * @type {number}
     * @memberof ProductionList
     */
    readonly performancesCount: number;
    /**
     *
     * @type {number}
     * @memberof ProductionList
     */
    readonly rehearsalsCount: number;
    /**
     *
     * @type {number}
     * @memberof ProductionList
     */
    readonly membersCount: number;
    /**
     *
     * @type {Date}
     * @memberof ProductionList
     */
    readonly nextPerformanceDatetime: Date;
}
/**
 * Check if a given object implements the ProductionList interface.
 */
export declare function instanceOfProductionList(value: object): value is ProductionList;
export declare function ProductionListFromJSON(json: any): ProductionList;
export declare function ProductionListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductionList;
export declare function ProductionListToJSON(json: any): ProductionList;
export declare function ProductionListToJSONTyped(value?: Omit<ProductionList, 'id' | 'venue_name' | 'director_name' | 'primary_category_name' | 'performances_count' | 'rehearsals_count' | 'members_count' | 'next_performance_datetime'> | null, ignoreDiscriminator?: boolean): any;
