/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Address } from './Address';
/**
 *
 * @export
 * @interface Venue
 */
export interface Venue {
    /**
     *
     * @type {number}
     * @memberof Venue
     */
    readonly id: number;
    /**
     *
     * @type {Address}
     * @memberof Venue
     */
    address: Address;
    /**
     *
     * @type {Date}
     * @memberof Venue
     */
    readonly createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Venue
     */
    readonly updatedAt: Date;
    /**
     *
     * @type {Date}
     * @memberof Venue
     */
    readonly archiveAt: Date | null;
    /**
     * Name of the venue
     * @type {string}
     * @memberof Venue
     */
    name: string;
    /**
     * Additional notes about the venue
     * @type {string}
     * @memberof Venue
     */
    notes?: string;
    /**
     * Contact person for the venue
     * @type {string}
     * @memberof Venue
     */
    contactName?: string;
    /**
     * Email address for the venue contact
     * @type {string}
     * @memberof Venue
     */
    contactEmail?: string;
    /**
     * Contact person for the venue contact
     * @type {string}
     * @memberof Venue
     */
    contactPhone?: string;
    /**
     * Is the venue currently active?
     * @type {boolean}
     * @memberof Venue
     */
    isActive?: boolean;
    /**
     *
     * @type {number}
     * @memberof Venue
     */
    readonly tenant: number;
    /**
     *
     * @type {number}
     * @memberof Venue
     */
    readonly createdBy: number | null;
    /**
     *
     * @type {number}
     * @memberof Venue
     */
    readonly updatedBy: number | null;
    /**
     * Tags associated with the venue
     * @type {Array<number>}
     * @memberof Venue
     */
    tags: Array<number>;
}
/**
 * Check if a given object implements the Venue interface.
 */
export declare function instanceOfVenue(value: object): value is Venue;
export declare function VenueFromJSON(json: any): Venue;
export declare function VenueFromJSONTyped(json: any, ignoreDiscriminator: boolean): Venue;
export declare function VenueToJSON(json: any): Venue;
export declare function VenueToJSONTyped(value?: Omit<Venue, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
