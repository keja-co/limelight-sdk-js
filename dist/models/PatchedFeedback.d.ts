/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.108
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Serializer for the Feedback model.
 * @export
 * @interface PatchedFeedback
 */
export interface PatchedFeedback {
    /**
     *
     * @type {number}
     * @memberof PatchedFeedback
     */
    readonly id?: number;
    /**
     *
     * @type {Date}
     * @memberof PatchedFeedback
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedFeedback
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedFeedback
     */
    readonly archiveAt?: Date | null;
    /**
     * Feedback notes. Supports markdown.
     * @type {string}
     * @memberof PatchedFeedback
     */
    notes?: string | null;
    /**
     * If the panel wishes to use scores, they can enter them here.
     * @type {string}
     * @memberof PatchedFeedback
     */
    score?: string | null;
    /**
     *
     * @type {number}
     * @memberof PatchedFeedback
     */
    readonly tenant?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedFeedback
     */
    readonly createdBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedFeedback
     */
    readonly updatedBy?: number | null;
    /**
     *
     * @type {number}
     * @memberof PatchedFeedback
     */
    signup?: number;
    /**
     * User who provided the feedback. Can be null if feedback is anonymous.
     * @type {number}
     * @memberof PatchedFeedback
     */
    reviewer?: number | null;
}
/**
 * Check if a given object implements the PatchedFeedback interface.
 */
export declare function instanceOfPatchedFeedback(value: object): value is PatchedFeedback;
export declare function PatchedFeedbackFromJSON(json: any): PatchedFeedback;
export declare function PatchedFeedbackFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedFeedback;
export declare function PatchedFeedbackToJSON(json: any): PatchedFeedback;
export declare function PatchedFeedbackToJSONTyped(value?: Omit<PatchedFeedback, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'> | null, ignoreDiscriminator?: boolean): any;
