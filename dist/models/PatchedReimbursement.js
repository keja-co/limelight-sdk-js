"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.114
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedReimbursement = instanceOfPatchedReimbursement;
exports.PatchedReimbursementFromJSON = PatchedReimbursementFromJSON;
exports.PatchedReimbursementFromJSONTyped = PatchedReimbursementFromJSONTyped;
exports.PatchedReimbursementToJSON = PatchedReimbursementToJSON;
exports.PatchedReimbursementToJSONTyped = PatchedReimbursementToJSONTyped;
var ReimbursementStatusEnum_1 = require("./ReimbursementStatusEnum");
/**
 * Check if a given object implements the PatchedReimbursement interface.
 */
function instanceOfPatchedReimbursement(value) {
    return true;
}
function PatchedReimbursementFromJSON(json) {
    return PatchedReimbursementFromJSONTyped(json, false);
}
function PatchedReimbursementFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'payeeName': json['payee_name'] == null ? undefined : json['payee_name'],
        'approverName': json['approver_name'] == null ? undefined : json['approver_name'],
        'expenseTitle': json['expense_title'] == null ? undefined : json['expense_title'],
        'expenseIsProduction': json['expense_is_production'] == null ? undefined : json['expense_is_production'],
        'productionId': json['production_id'] == null ? undefined : json['production_id'],
        'productionName': json['production_name'] == null ? undefined : json['production_name'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'approvedDateTime': json['approved_date_time'] == null ? undefined : (new Date(json['approved_date_time'])),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'scheduledDate': json['scheduled_date'] == null ? undefined : (new Date(json['scheduled_date'])),
        'processedDate': json['processed_date'] == null ? undefined : (new Date(json['processed_date'])),
        'status': json['status'] == null ? undefined : (0, ReimbursementStatusEnum_1.ReimbursementStatusEnumFromJSON)(json['status']),
        'paymentReference': json['payment_reference'] == null ? undefined : json['payment_reference'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'payee': json['payee'] == null ? undefined : json['payee'],
        'approver': json['approver'] == null ? undefined : json['approver'],
        'expense': json['expense'] == null ? undefined : json['expense'],
    };
}
function PatchedReimbursementToJSON(json) {
    return PatchedReimbursementToJSONTyped(json, false);
}
function PatchedReimbursementToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'approved_date_time': value['approvedDateTime'] == null ? value['approvedDateTime'] : value['approvedDateTime'].toISOString(),
        'amount': value['amount'],
        'scheduled_date': value['scheduledDate'] == null ? value['scheduledDate'] : value['scheduledDate'].toISOString().substring(0, 10),
        'processed_date': value['processedDate'] == null ? value['processedDate'] : value['processedDate'].toISOString().substring(0, 10),
        'status': (0, ReimbursementStatusEnum_1.ReimbursementStatusEnumToJSON)(value['status']),
        'payment_reference': value['paymentReference'],
        'notes': value['notes'],
        'payee': value['payee'],
        'approver': value['approver'],
        'expense': value['expense'],
    };
}
