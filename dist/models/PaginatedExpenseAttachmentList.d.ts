/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.98
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExpenseAttachment } from './ExpenseAttachment';
/**
 *
 * @export
 * @interface PaginatedExpenseAttachmentList
 */
export interface PaginatedExpenseAttachmentList {
    /**
     *
     * @type {number}
     * @memberof PaginatedExpenseAttachmentList
     */
    count: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedExpenseAttachmentList
     */
    next?: string;
    /**
     *
     * @type {string}
     * @memberof PaginatedExpenseAttachmentList
     */
    previous?: string;
    /**
     *
     * @type {Array<ExpenseAttachment>}
     * @memberof PaginatedExpenseAttachmentList
     */
    results: Array<ExpenseAttachment>;
    /**
     *
     * @type {number}
     * @memberof PaginatedExpenseAttachmentList
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedExpenseAttachmentList
     */
    pageSize?: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedExpenseAttachmentList
     */
    pageCount?: number;
}
/**
 * Check if a given object implements the PaginatedExpenseAttachmentList interface.
 */
export declare function instanceOfPaginatedExpenseAttachmentList(value: object): value is PaginatedExpenseAttachmentList;
export declare function PaginatedExpenseAttachmentListFromJSON(json: any): PaginatedExpenseAttachmentList;
export declare function PaginatedExpenseAttachmentListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedExpenseAttachmentList;
export declare function PaginatedExpenseAttachmentListToJSON(json: any): PaginatedExpenseAttachmentList;
export declare function PaginatedExpenseAttachmentListToJSONTyped(value?: PaginatedExpenseAttachmentList | null, ignoreDiscriminator?: boolean): any;
