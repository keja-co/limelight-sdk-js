"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.99
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPatchedVenue = instanceOfPatchedVenue;
exports.PatchedVenueFromJSON = PatchedVenueFromJSON;
exports.PatchedVenueFromJSONTyped = PatchedVenueFromJSONTyped;
exports.PatchedVenueToJSON = PatchedVenueToJSON;
exports.PatchedVenueToJSONTyped = PatchedVenueToJSONTyped;
var Address_1 = require("./Address");
/**
 * Check if a given object implements the PatchedVenue interface.
 */
function instanceOfPatchedVenue(value) {
    return true;
}
function PatchedVenueFromJSON(json) {
    return PatchedVenueFromJSONTyped(json, false);
}
function PatchedVenueFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'address': json['address'] == null ? undefined : (0, Address_1.AddressFromJSON)(json['address']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'archiveAt': json['archive_at'] == null ? undefined : (new Date(json['archive_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'contactName': json['contact_name'] == null ? undefined : json['contact_name'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'contactPhone': json['contact_phone'] == null ? undefined : json['contact_phone'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}
function PatchedVenueToJSON(json) {
    return PatchedVenueToJSONTyped(json, false);
}
function PatchedVenueToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'address': (0, Address_1.AddressToJSON)(value['address']),
        'name': value['name'],
        'notes': value['notes'],
        'contact_name': value['contactName'],
        'contact_email': value['contactEmail'],
        'contact_phone': value['contactPhone'],
        'is_active': value['isActive'],
        'tags': value['tags'],
    };
}
