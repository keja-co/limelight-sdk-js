"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TicketingApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var TicketingApi = /** @class */ (function (_super) {
    __extends(TicketingApi, _super);
    function TicketingApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['discount'] == null) {
                            throw new runtime.RequiredError('discount', 'Required parameter "discount" was null or undefined when calling ticketingV1DiscountsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/discounts/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DiscountToJSON)(requestParameters['discount']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1DiscountsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/discounts/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/discounts/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDiscountListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsList = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1DiscountsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/discounts/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedDiscountToJSON)(requestParameters['patchedDiscount']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1DiscountsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/discounts/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['discountId'] == null) {
                            throw new runtime.RequiredError('discountId', 'Required parameter "discountId" was null or undefined when calling ticketingV1DiscountsTicketTypesCreate().');
                        }
                        if (requestParameters['discountTicketType'] == null) {
                            throw new runtime.RequiredError('discountTicketType', 'Required parameter "discountTicketType" was null or undefined when calling ticketingV1DiscountsTicketTypesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/discounts/{discount_id}/ticket-types/";
                        urlPath = urlPath.replace("{".concat("discount_id", "}"), encodeURIComponent(String(requestParameters['discountId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DiscountTicketTypeToJSON)(requestParameters['discountTicketType']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountTicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsTicketTypesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['discountId'] == null) {
                            throw new runtime.RequiredError('discountId', 'Required parameter "discountId" was null or undefined when calling ticketingV1DiscountsTicketTypesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/discounts/{discount_id}/ticket-types/";
                        urlPath = urlPath.replace("{".concat("discount_id", "}"), encodeURIComponent(String(requestParameters['discountId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDiscountTicketTypeListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsTicketTypesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['discountId'] == null) {
                            throw new runtime.RequiredError('discountId', 'Required parameter "discountId" was null or undefined when calling ticketingV1DiscountsTicketTypesRetrieve().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1DiscountsTicketTypesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/discounts/{discount_id}/ticket-types/{id}/";
                        urlPath = urlPath.replace("{".concat("discount_id", "}"), encodeURIComponent(String(requestParameters['discountId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountTicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsTicketTypesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsTicketTypesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1DiscountsUpdate().');
                        }
                        if (requestParameters['discount'] == null) {
                            throw new runtime.RequiredError('discount', 'Required parameter "discount" was null or undefined when calling ticketingV1DiscountsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/discounts/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DiscountToJSON)(requestParameters['discount']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DiscountFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1DiscountsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1DiscountsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsCreate().');
                        }
                        if (requestParameters['section'] == null) {
                            throw new runtime.RequiredError('section', 'Required parameter "section" was null or undefined when calling ticketingV1ProdVenueSectionsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.SectionToJSON)(requestParameters['section']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsDestroy().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedSectionListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsPartialUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedSectionToJSON)(requestParameters['patchedSection']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsRetrieve().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsCreate().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsCreate().');
                        }
                        if (requestParameters['sectionSeat'] == null) {
                            throw new runtime.RequiredError('sectionSeat', 'Required parameter "sectionSeat" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.SectionSeatToJSON)(requestParameters['sectionSeat']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionSeatFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsDestroy().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsDestroy().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsList().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedSectionSeatListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsPartialUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsPartialUpdate().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedSectionSeatToJSON)(requestParameters['patchedSectionSeat']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionSeatFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsRetrieve().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsRetrieve().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionSeatFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsUpdate().');
                        }
                        if (requestParameters['sectionId'] == null) {
                            throw new runtime.RequiredError('sectionId', 'Required parameter "sectionId" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsUpdate().');
                        }
                        if (requestParameters['sectionSeat'] == null) {
                            throw new runtime.RequiredError('sectionSeat', 'Required parameter "sectionSeat" was null or undefined when calling ticketingV1ProdVenueSectionsSeatsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        urlPath = urlPath.replace("{".concat("section_id", "}"), encodeURIComponent(String(requestParameters['sectionId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.SectionSeatToJSON)(requestParameters['sectionSeat']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionSeatFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsSeatsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsSeatsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueSectionsUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueSectionsUpdate().');
                        }
                        if (requestParameters['section'] == null) {
                            throw new runtime.RequiredError('section', 'Required parameter "section" was null or undefined when calling ticketingV1ProdVenueSectionsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/sections/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.SectionToJSON)(requestParameters['section']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SectionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueSectionsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueSectionsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesCreate().');
                        }
                        if (requestParameters['ticketType'] == null) {
                            throw new runtime.RequiredError('ticketType', 'Required parameter "ticketType" was null or undefined when calling ticketingV1ProdVenueTicketTypesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TicketTypeToJSON)(requestParameters['ticketType']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueTicketTypesDestroy().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/";
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedTicketTypeListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueTicketTypesPartialUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedTicketTypeToJSON)(requestParameters['patchedTicketType']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueTicketTypesRetrieve().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1ProdVenueTicketTypesUpdate().');
                        }
                        if (requestParameters['productionVenueId'] == null) {
                            throw new runtime.RequiredError('productionVenueId', 'Required parameter "productionVenueId" was null or undefined when calling ticketingV1ProdVenueTicketTypesUpdate().');
                        }
                        if (requestParameters['ticketType'] == null) {
                            throw new runtime.RequiredError('ticketType', 'Required parameter "ticketType" was null or undefined when calling ticketingV1ProdVenueTicketTypesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_venue_id", "}"), encodeURIComponent(String(requestParameters['productionVenueId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TicketTypeToJSON)(requestParameters['ticketType']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketTypeFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1ProdVenueTicketTypesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1ProdVenueTicketTypesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['purchase'] == null) {
                            throw new runtime.RequiredError('purchase', 'Required parameter "purchase" was null or undefined when calling ticketingV1PurchasesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PurchaseToJSON)(requestParameters['purchase']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PurchaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedPurchaseListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesList = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedPurchaseToJSON)(requestParameters['patchedPurchase']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PurchaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PurchaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsCreate().');
                        }
                        if (requestParameters['ticket'] == null) {
                            throw new runtime.RequiredError('ticket', 'Required parameter "ticket" was null or undefined when calling ticketingV1PurchasesTicketsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/";
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TicketToJSON)(requestParameters['ticket']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesTicketsDestroy().');
                        }
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/";
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedTicketListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesTicketsPartialUpdate().');
                        }
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedTicketToJSON)(requestParameters['patchedTicket']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesTicketsRetrieve().');
                        }
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesTicketsUpdate().');
                        }
                        if (requestParameters['purchaseId'] == null) {
                            throw new runtime.RequiredError('purchaseId', 'Required parameter "purchaseId" was null or undefined when calling ticketingV1PurchasesTicketsUpdate().');
                        }
                        if (requestParameters['ticket'] == null) {
                            throw new runtime.RequiredError('ticket', 'Required parameter "ticket" was null or undefined when calling ticketingV1PurchasesTicketsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/{purchase_id}/tickets/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("purchase_id", "}"), encodeURIComponent(String(requestParameters['purchaseId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TicketToJSON)(requestParameters['ticket']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TicketFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesTicketsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesTicketsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling ticketingV1PurchasesUpdate().');
                        }
                        if (requestParameters['purchase'] == null) {
                            throw new runtime.RequiredError('purchase', 'Required parameter "purchase" was null or undefined when calling ticketingV1PurchasesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/ticketing/v1/purchases/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PurchaseToJSON)(requestParameters['purchase']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PurchaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    TicketingApi.prototype.ticketingV1PurchasesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ticketingV1PurchasesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return TicketingApi;
}(runtime.BaseAPI));
exports.TicketingApi = TicketingApi;
