"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentsApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var DocumentsApi = /** @class */ (function (_super) {
    __extends(DocumentsApi, _super);
    function DocumentsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     */
    DocumentsApi.prototype.documentsV1ReposCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentRepo'] == null) {
                            throw new runtime.RequiredError('documentRepo', 'Required parameter "documentRepo" was null or undefined when calling documentsV1ReposCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentRepoToJSON)(requestParameters['documentRepo']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentRepoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsCreate().');
                        }
                        if (requestParameters['document'] == null) {
                            throw new runtime.RequiredError('document', 'Required parameter "document" was null or undefined when calling documentsV1ReposDocumentsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/";
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentToJSON)(requestParameters['document']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsDestroy().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['folderId'] != null) {
                            queryParameters['folder_id'] = requestParameters['folderId'];
                        }
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/";
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDocumentListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsPartialUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedDocumentToJSON)(requestParameters['patchedDocument']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsRetrieve().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsTagsCreate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsTagsCreate().');
                        }
                        if (requestParameters['documentTag'] == null) {
                            throw new runtime.RequiredError('documentTag', 'Required parameter "documentTag" was null or undefined when calling documentsV1ReposDocumentsTagsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentTagToJSON)(requestParameters['documentTag']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentTagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsTagsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsTagsDestroy().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsTagsDestroy().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsTagsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsTagsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsTagsList().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsTagsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDocumentTagListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsTagsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsTagsRetrieve().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsTagsRetrieve().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsTagsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentTagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsTagsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsTagsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsUpdate().');
                        }
                        if (requestParameters['document'] == null) {
                            throw new runtime.RequiredError('document', 'Required parameter "document" was null or undefined when calling documentsV1ReposDocumentsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentToJSON)(requestParameters['document']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsCreate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsCreate().');
                        }
                        if (requestParameters['documentVersion'] == null) {
                            throw new runtime.RequiredError('documentVersion', 'Required parameter "documentVersion" was null or undefined when calling documentsV1ReposDocumentsVersionsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentVersionToJSON)(requestParameters['documentVersion']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentVersionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsDestroy().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsVersionsDestroy().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsList().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDocumentVersionListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsPartialUpdate().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsVersionsPartialUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedDocumentVersionToJSON)(requestParameters['patchedDocumentVersion']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentVersionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsRetrieve().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsVersionsRetrieve().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentVersionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['documentId'] == null) {
                            throw new runtime.RequiredError('documentId', 'Required parameter "documentId" was null or undefined when calling documentsV1ReposDocumentsVersionsUpdate().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposDocumentsVersionsUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposDocumentsVersionsUpdate().');
                        }
                        if (requestParameters['documentVersion'] == null) {
                            throw new runtime.RequiredError('documentVersion', 'Required parameter "documentVersion" was null or undefined when calling documentsV1ReposDocumentsVersionsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/{id}/";
                        urlPath = urlPath.replace("{".concat("document_id", "}"), encodeURIComponent(String(requestParameters['documentId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentVersionToJSON)(requestParameters['documentVersion']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentVersionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposDocumentsVersionsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposDocumentsVersionsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersCreate().');
                        }
                        if (requestParameters['folder'] == null) {
                            throw new runtime.RequiredError('folder', 'Required parameter "folder" was null or undefined when calling documentsV1ReposFoldersCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/";
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.FolderToJSON)(requestParameters['folder']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FolderFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposFoldersDestroy().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        if (requestParameters['parentFolderId'] != null) {
                            queryParameters['parent_folder_id'] = requestParameters['parentFolderId'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/";
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedFolderListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposFoldersPartialUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedFolderToJSON)(requestParameters['patchedFolder']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FolderFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposFoldersRetrieve().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FolderFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposFoldersUpdate().');
                        }
                        if (requestParameters['repoId'] == null) {
                            throw new runtime.RequiredError('repoId', 'Required parameter "repoId" was null or undefined when calling documentsV1ReposFoldersUpdate().');
                        }
                        if (requestParameters['folder'] == null) {
                            throw new runtime.RequiredError('folder', 'Required parameter "folder" was null or undefined when calling documentsV1ReposFoldersUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{repo_id}/folders/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("repo_id", "}"), encodeURIComponent(String(requestParameters['repoId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.FolderToJSON)(requestParameters['folder']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FolderFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposFoldersUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposFoldersUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedDocumentRepoListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposList = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedDocumentRepoToJSON)(requestParameters['patchedDocumentRepo']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentRepoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/repos/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentRepoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1ReposUpdate().');
                        }
                        if (requestParameters['documentRepo'] == null) {
                            throw new runtime.RequiredError('documentRepo', 'Required parameter "documentRepo" was null or undefined when calling documentsV1ReposUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/repos/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DocumentRepoToJSON)(requestParameters['documentRepo']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.DocumentRepoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1ReposUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1ReposUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tag'] == null) {
                            throw new runtime.RequiredError('tag', 'Required parameter "tag" was null or undefined when calling documentsV1TagsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/tags/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TagToJSON)(requestParameters['tag']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1TagsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/documents/v1/tags/";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedTagListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsList = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1TagsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedTagToJSON)(requestParameters['patchedTag']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1TagsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/documents/v1/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling documentsV1TagsUpdate().');
                        }
                        if (requestParameters['tag'] == null) {
                            throw new runtime.RequiredError('tag', 'Required parameter "tag" was null or undefined when calling documentsV1TagsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/documents/v1/tags/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.TagToJSON)(requestParameters['tag']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.TagFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     */
    DocumentsApi.prototype.documentsV1TagsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.documentsV1TagsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return DocumentsApi;
}(runtime.BaseAPI));
exports.DocumentsApi = DocumentsApi;
