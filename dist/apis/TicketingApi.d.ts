/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Discount, DiscountTicketType, PaginatedDiscountList, PaginatedDiscountTicketTypeList, PaginatedPurchaseList, PaginatedSectionList, PaginatedSectionSeatList, PaginatedTicketList, PaginatedTicketTypeList, PatchedDiscount, PatchedPurchase, PatchedSection, PatchedSectionSeat, PatchedTicket, PatchedTicketType, Purchase, Section, SectionSeat, Ticket, TicketType } from '../models/index';
export interface TicketingV1DiscountsCreateRequest {
    discount: Omit<Discount, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1DiscountsDestroyRequest {
    id: number;
}
export interface TicketingV1DiscountsListRequest {
    page?: number;
    pageSize?: number;
}
export interface TicketingV1DiscountsPartialUpdateRequest {
    id: number;
    patchedDiscount?: Omit<PatchedDiscount, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1DiscountsRetrieveRequest {
    id: number;
}
export interface TicketingV1DiscountsTicketTypesCreateRequest {
    discountId: number;
    discountTicketType: Omit<DiscountTicketType, 'id' | 'discount' | 'ticket_type' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1DiscountsTicketTypesListRequest {
    discountId: number;
    page?: number;
    pageSize?: number;
}
export interface TicketingV1DiscountsTicketTypesRetrieveRequest {
    discountId: number;
    id: number;
}
export interface TicketingV1DiscountsUpdateRequest {
    id: number;
    discount: Omit<Discount, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsCreateRequest {
    productionVenueId: number;
    section: Omit<Section, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsDestroyRequest {
    id: number;
    productionVenueId: number;
}
export interface TicketingV1ProdVenueSectionsListRequest {
    productionVenueId: number;
    page?: number;
    pageSize?: number;
}
export interface TicketingV1ProdVenueSectionsPartialUpdateRequest {
    id: number;
    productionVenueId: number;
    patchedSection?: Omit<PatchedSection, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsRetrieveRequest {
    id: number;
    productionVenueId: number;
}
export interface TicketingV1ProdVenueSectionsSeatsCreateRequest {
    productionVenueId: string;
    sectionId: string;
    sectionSeat: Omit<SectionSeat, 'id' | 'section' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsSeatsDestroyRequest {
    id: number;
    productionVenueId: string;
    sectionId: string;
}
export interface TicketingV1ProdVenueSectionsSeatsListRequest {
    productionVenueId: string;
    sectionId: string;
    page?: number;
    pageSize?: number;
}
export interface TicketingV1ProdVenueSectionsSeatsPartialUpdateRequest {
    id: number;
    productionVenueId: string;
    sectionId: string;
    patchedSectionSeat?: Omit<PatchedSectionSeat, 'id' | 'section' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsSeatsRetrieveRequest {
    id: number;
    productionVenueId: string;
    sectionId: string;
}
export interface TicketingV1ProdVenueSectionsSeatsUpdateRequest {
    id: number;
    productionVenueId: string;
    sectionId: string;
    sectionSeat: Omit<SectionSeat, 'id' | 'section' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueSectionsUpdateRequest {
    id: number;
    productionVenueId: number;
    section: Omit<Section, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueTicketTypesCreateRequest {
    productionVenueId: number;
    ticketType: Omit<TicketType, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueTicketTypesDestroyRequest {
    id: number;
    productionVenueId: number;
}
export interface TicketingV1ProdVenueTicketTypesListRequest {
    productionVenueId: number;
    page?: number;
    pageSize?: number;
}
export interface TicketingV1ProdVenueTicketTypesPartialUpdateRequest {
    id: number;
    productionVenueId: number;
    patchedTicketType?: Omit<PatchedTicketType, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1ProdVenueTicketTypesRetrieveRequest {
    id: number;
    productionVenueId: number;
}
export interface TicketingV1ProdVenueTicketTypesUpdateRequest {
    id: number;
    productionVenueId: number;
    ticketType: Omit<TicketType, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1PurchasesCreateRequest {
    purchase: Omit<Purchase, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1PurchasesDestroyRequest {
    id: number;
}
export interface TicketingV1PurchasesListRequest {
    page?: number;
    pageSize?: number;
}
export interface TicketingV1PurchasesPartialUpdateRequest {
    id: number;
    patchedPurchase?: Omit<PatchedPurchase, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
export interface TicketingV1PurchasesRetrieveRequest {
    id: number;
}
export interface TicketingV1PurchasesTicketsCreateRequest {
    purchaseId: number;
    ticket: Omit<Ticket, 'id' | 'section_seat' | 'ticket_type' | 'purchase' | 'created_at' | 'updated_at' | 'ticket_uuid' | 'created_by'>;
}
export interface TicketingV1PurchasesTicketsDestroyRequest {
    id: number;
    purchaseId: number;
}
export interface TicketingV1PurchasesTicketsListRequest {
    purchaseId: number;
    page?: number;
    pageSize?: number;
}
export interface TicketingV1PurchasesTicketsPartialUpdateRequest {
    id: number;
    purchaseId: number;
    patchedTicket?: Omit<PatchedTicket, 'id' | 'section_seat' | 'ticket_type' | 'purchase' | 'created_at' | 'updated_at' | 'ticket_uuid' | 'created_by'>;
}
export interface TicketingV1PurchasesTicketsRetrieveRequest {
    id: number;
    purchaseId: number;
}
export interface TicketingV1PurchasesTicketsUpdateRequest {
    id: number;
    purchaseId: number;
    ticket: Omit<Ticket, 'id' | 'section_seat' | 'ticket_type' | 'purchase' | 'created_at' | 'updated_at' | 'ticket_uuid' | 'created_by'>;
}
export interface TicketingV1PurchasesUpdateRequest {
    id: number;
    purchase: Omit<Purchase, 'id' | 'created_at' | 'updated_at' | 'created_by'>;
}
/**
 *
 */
export declare class TicketingApi extends runtime.BaseAPI {
    /**
     */
    ticketingV1DiscountsCreateRaw(requestParameters: TicketingV1DiscountsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Discount>>;
    /**
     */
    ticketingV1DiscountsCreate(requestParameters: TicketingV1DiscountsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Discount>;
    /**
     */
    ticketingV1DiscountsDestroyRaw(requestParameters: TicketingV1DiscountsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1DiscountsDestroy(requestParameters: TicketingV1DiscountsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1DiscountsListRaw(requestParameters: TicketingV1DiscountsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedDiscountList>>;
    /**
     */
    ticketingV1DiscountsList(requestParameters?: TicketingV1DiscountsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedDiscountList>;
    /**
     */
    ticketingV1DiscountsPartialUpdateRaw(requestParameters: TicketingV1DiscountsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Discount>>;
    /**
     */
    ticketingV1DiscountsPartialUpdate(requestParameters: TicketingV1DiscountsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Discount>;
    /**
     */
    ticketingV1DiscountsRetrieveRaw(requestParameters: TicketingV1DiscountsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Discount>>;
    /**
     */
    ticketingV1DiscountsRetrieve(requestParameters: TicketingV1DiscountsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Discount>;
    /**
     */
    ticketingV1DiscountsTicketTypesCreateRaw(requestParameters: TicketingV1DiscountsTicketTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountTicketType>>;
    /**
     */
    ticketingV1DiscountsTicketTypesCreate(requestParameters: TicketingV1DiscountsTicketTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountTicketType>;
    /**
     */
    ticketingV1DiscountsTicketTypesListRaw(requestParameters: TicketingV1DiscountsTicketTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedDiscountTicketTypeList>>;
    /**
     */
    ticketingV1DiscountsTicketTypesList(requestParameters: TicketingV1DiscountsTicketTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedDiscountTicketTypeList>;
    /**
     */
    ticketingV1DiscountsTicketTypesRetrieveRaw(requestParameters: TicketingV1DiscountsTicketTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountTicketType>>;
    /**
     */
    ticketingV1DiscountsTicketTypesRetrieve(requestParameters: TicketingV1DiscountsTicketTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountTicketType>;
    /**
     */
    ticketingV1DiscountsUpdateRaw(requestParameters: TicketingV1DiscountsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Discount>>;
    /**
     */
    ticketingV1DiscountsUpdate(requestParameters: TicketingV1DiscountsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Discount>;
    /**
     */
    ticketingV1ProdVenueSectionsCreateRaw(requestParameters: TicketingV1ProdVenueSectionsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Section>>;
    /**
     */
    ticketingV1ProdVenueSectionsCreate(requestParameters: TicketingV1ProdVenueSectionsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Section>;
    /**
     */
    ticketingV1ProdVenueSectionsDestroyRaw(requestParameters: TicketingV1ProdVenueSectionsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1ProdVenueSectionsDestroy(requestParameters: TicketingV1ProdVenueSectionsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1ProdVenueSectionsListRaw(requestParameters: TicketingV1ProdVenueSectionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedSectionList>>;
    /**
     */
    ticketingV1ProdVenueSectionsList(requestParameters: TicketingV1ProdVenueSectionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedSectionList>;
    /**
     */
    ticketingV1ProdVenueSectionsPartialUpdateRaw(requestParameters: TicketingV1ProdVenueSectionsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Section>>;
    /**
     */
    ticketingV1ProdVenueSectionsPartialUpdate(requestParameters: TicketingV1ProdVenueSectionsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Section>;
    /**
     */
    ticketingV1ProdVenueSectionsRetrieveRaw(requestParameters: TicketingV1ProdVenueSectionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Section>>;
    /**
     */
    ticketingV1ProdVenueSectionsRetrieve(requestParameters: TicketingV1ProdVenueSectionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Section>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsCreateRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SectionSeat>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsCreate(requestParameters: TicketingV1ProdVenueSectionsSeatsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SectionSeat>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsDestroyRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsDestroy(requestParameters: TicketingV1ProdVenueSectionsSeatsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsListRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedSectionSeatList>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsList(requestParameters: TicketingV1ProdVenueSectionsSeatsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedSectionSeatList>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsPartialUpdateRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SectionSeat>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsPartialUpdate(requestParameters: TicketingV1ProdVenueSectionsSeatsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SectionSeat>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsRetrieveRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SectionSeat>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsRetrieve(requestParameters: TicketingV1ProdVenueSectionsSeatsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SectionSeat>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsUpdateRaw(requestParameters: TicketingV1ProdVenueSectionsSeatsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SectionSeat>>;
    /**
     */
    ticketingV1ProdVenueSectionsSeatsUpdate(requestParameters: TicketingV1ProdVenueSectionsSeatsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SectionSeat>;
    /**
     */
    ticketingV1ProdVenueSectionsUpdateRaw(requestParameters: TicketingV1ProdVenueSectionsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Section>>;
    /**
     */
    ticketingV1ProdVenueSectionsUpdate(requestParameters: TicketingV1ProdVenueSectionsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Section>;
    /**
     */
    ticketingV1ProdVenueTicketTypesCreateRaw(requestParameters: TicketingV1ProdVenueTicketTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TicketType>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesCreate(requestParameters: TicketingV1ProdVenueTicketTypesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TicketType>;
    /**
     */
    ticketingV1ProdVenueTicketTypesDestroyRaw(requestParameters: TicketingV1ProdVenueTicketTypesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesDestroy(requestParameters: TicketingV1ProdVenueTicketTypesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1ProdVenueTicketTypesListRaw(requestParameters: TicketingV1ProdVenueTicketTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedTicketTypeList>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesList(requestParameters: TicketingV1ProdVenueTicketTypesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedTicketTypeList>;
    /**
     */
    ticketingV1ProdVenueTicketTypesPartialUpdateRaw(requestParameters: TicketingV1ProdVenueTicketTypesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TicketType>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesPartialUpdate(requestParameters: TicketingV1ProdVenueTicketTypesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TicketType>;
    /**
     */
    ticketingV1ProdVenueTicketTypesRetrieveRaw(requestParameters: TicketingV1ProdVenueTicketTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TicketType>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesRetrieve(requestParameters: TicketingV1ProdVenueTicketTypesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TicketType>;
    /**
     */
    ticketingV1ProdVenueTicketTypesUpdateRaw(requestParameters: TicketingV1ProdVenueTicketTypesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TicketType>>;
    /**
     */
    ticketingV1ProdVenueTicketTypesUpdate(requestParameters: TicketingV1ProdVenueTicketTypesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TicketType>;
    /**
     */
    ticketingV1PurchasesCreateRaw(requestParameters: TicketingV1PurchasesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Purchase>>;
    /**
     */
    ticketingV1PurchasesCreate(requestParameters: TicketingV1PurchasesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Purchase>;
    /**
     */
    ticketingV1PurchasesDestroyRaw(requestParameters: TicketingV1PurchasesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1PurchasesDestroy(requestParameters: TicketingV1PurchasesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1PurchasesListRaw(requestParameters: TicketingV1PurchasesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedPurchaseList>>;
    /**
     */
    ticketingV1PurchasesList(requestParameters?: TicketingV1PurchasesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedPurchaseList>;
    /**
     */
    ticketingV1PurchasesPartialUpdateRaw(requestParameters: TicketingV1PurchasesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Purchase>>;
    /**
     */
    ticketingV1PurchasesPartialUpdate(requestParameters: TicketingV1PurchasesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Purchase>;
    /**
     */
    ticketingV1PurchasesRetrieveRaw(requestParameters: TicketingV1PurchasesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Purchase>>;
    /**
     */
    ticketingV1PurchasesRetrieve(requestParameters: TicketingV1PurchasesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Purchase>;
    /**
     */
    ticketingV1PurchasesTicketsCreateRaw(requestParameters: TicketingV1PurchasesTicketsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Ticket>>;
    /**
     */
    ticketingV1PurchasesTicketsCreate(requestParameters: TicketingV1PurchasesTicketsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Ticket>;
    /**
     */
    ticketingV1PurchasesTicketsDestroyRaw(requestParameters: TicketingV1PurchasesTicketsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ticketingV1PurchasesTicketsDestroy(requestParameters: TicketingV1PurchasesTicketsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ticketingV1PurchasesTicketsListRaw(requestParameters: TicketingV1PurchasesTicketsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedTicketList>>;
    /**
     */
    ticketingV1PurchasesTicketsList(requestParameters: TicketingV1PurchasesTicketsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedTicketList>;
    /**
     */
    ticketingV1PurchasesTicketsPartialUpdateRaw(requestParameters: TicketingV1PurchasesTicketsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Ticket>>;
    /**
     */
    ticketingV1PurchasesTicketsPartialUpdate(requestParameters: TicketingV1PurchasesTicketsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Ticket>;
    /**
     */
    ticketingV1PurchasesTicketsRetrieveRaw(requestParameters: TicketingV1PurchasesTicketsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Ticket>>;
    /**
     */
    ticketingV1PurchasesTicketsRetrieve(requestParameters: TicketingV1PurchasesTicketsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Ticket>;
    /**
     */
    ticketingV1PurchasesTicketsUpdateRaw(requestParameters: TicketingV1PurchasesTicketsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Ticket>>;
    /**
     */
    ticketingV1PurchasesTicketsUpdate(requestParameters: TicketingV1PurchasesTicketsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Ticket>;
    /**
     */
    ticketingV1PurchasesUpdateRaw(requestParameters: TicketingV1PurchasesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Purchase>>;
    /**
     */
    ticketingV1PurchasesUpdate(requestParameters: TicketingV1PurchasesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Purchase>;
}
