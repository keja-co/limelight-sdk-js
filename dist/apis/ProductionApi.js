"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.74
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductionApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var ProductionApi = /** @class */ (function (_super) {
    __extends(ProductionApi, _super);
    function ProductionApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new production category assignment.
     * Create a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsCreate().');
                        }
                        if (requestParameters['productionCategoryAssignment'] == null) {
                            throw new runtime.RequiredError('productionCategoryAssignment', 'Required parameter "productionCategoryAssignment" was null or undefined when calling productionV1CategoriesAssignmentsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionCategoryAssignmentToJSON)(requestParameters['productionCategoryAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production category assignment.
     * Create a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production category assignment.
     * Delete a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsDestroy().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesAssignmentsDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/{id}/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production category assignment.
     * Delete a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all category assignments for a production.
     * List Production Category Assignments
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionCategoryAssignmentListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all category assignments for a production.
     * List Production Category Assignments
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production category assignment.
     * Partially Update a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsPartialUpdate().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesAssignmentsPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/{id}/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionCategoryAssignmentToJSON)(requestParameters['patchedProductionCategoryAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production category assignment.
     * Partially Update a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production category assignment.
     * Retrieve a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsRetrieve().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesAssignmentsRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/{id}/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production category assignment.
     * Retrieve a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production category assignment.
     * Update a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['categoryId'] == null) {
                            throw new runtime.RequiredError('categoryId', 'Required parameter "categoryId" was null or undefined when calling productionV1CategoriesAssignmentsUpdate().');
                        }
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesAssignmentsUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesAssignmentsUpdate().');
                        }
                        if (requestParameters['productionCategoryAssignment'] == null) {
                            throw new runtime.RequiredError('productionCategoryAssignment', 'Required parameter "productionCategoryAssignment" was null or undefined when calling productionV1CategoriesAssignmentsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{category_id}/assignments/{id}/";
                        urlPath = urlPath.replace("{".concat("category_id", "}"), encodeURIComponent(String(requestParameters['categoryId'])));
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionCategoryAssignmentToJSON)(requestParameters['productionCategoryAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production category assignment.
     * Update a Production Category Assignment
     */
    ProductionApi.prototype.productionV1CategoriesAssignmentsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesAssignmentsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new production category.
     * Create a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesCreate().');
                        }
                        if (requestParameters['productionCategory'] == null) {
                            throw new runtime.RequiredError('productionCategory', 'Required parameter "productionCategory" was null or undefined when calling productionV1CategoriesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionCategoryToJSON)(requestParameters['productionCategory']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production category.
     * Create a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production category.
     * Delete a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production category.
     * Delete a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all production categories.
     * List Production Categories
     */
    ProductionApi.prototype.productionV1CategoriesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionCategoryListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all production categories.
     * List Production Categories
     */
    ProductionApi.prototype.productionV1CategoriesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production category.
     * Partially Update a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionCategoryToJSON)(requestParameters['patchedProductionCategory']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production category.
     * Partially Update a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production category.
     * Retrieve a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production category.
     * Retrieve a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production category.
     * Update a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1CategoriesUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1CategoriesUpdate().');
                        }
                        if (requestParameters['productionCategory'] == null) {
                            throw new runtime.RequiredError('productionCategory', 'Required parameter "productionCategory" was null or undefined when calling productionV1CategoriesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/categories/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionCategoryToJSON)(requestParameters['productionCategory']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionCategoryFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production category.
     * Update a Production Category
     */
    ProductionApi.prototype.productionV1CategoriesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1CategoriesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new production.
     * Create a Production
     */
    ProductionApi.prototype.productionV1ProductionsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsCreate().');
                        }
                        if (requestParameters['production'] == null) {
                            throw new runtime.RequiredError('production', 'Required parameter "production" was null or undefined when calling productionV1ProductionsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionToJSON)(requestParameters['production']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production.
     * Create a Production
     */
    ProductionApi.prototype.productionV1ProductionsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production.
     * Delete a Production
     */
    ProductionApi.prototype.productionV1ProductionsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production.
     * Delete a Production
     */
    ProductionApi.prototype.productionV1ProductionsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all productions.
     * List Productions
     */
    ProductionApi.prototype.productionV1ProductionsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all productions.
     * List Productions
     */
    ProductionApi.prototype.productionV1ProductionsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new production member.
     * Create a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersCreate().');
                        }
                        if (requestParameters['productionMember'] == null) {
                            throw new runtime.RequiredError('productionMember', 'Required parameter "productionMember" was null or undefined when calling productionV1ProductionsMembersCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionMemberToJSON)(requestParameters['productionMember']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionMemberFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production member.
     * Create a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production member.
     * Delete a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersDestroy().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production member.
     * Delete a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all members of a production.
     * List Production Members
     */
    ProductionApi.prototype.productionV1ProductionsMembersListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionMemberListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all members of a production.
     * List Production Members
     */
    ProductionApi.prototype.productionV1ProductionsMembersList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production member.
     * Partially Update a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersPartialUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionMemberToJSON)(requestParameters['patchedProductionMember']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionMemberFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production member.
     * Partially Update a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production member.
     * Retrieve a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersRetrieve().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionMemberFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production member.
     * Retrieve a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new production role assignment.
     * Create a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesCreate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesCreate().');
                        }
                        if (requestParameters['productionRoleAssignment'] == null) {
                            throw new runtime.RequiredError('productionRoleAssignment', 'Required parameter "productionRoleAssignment" was null or undefined when calling productionV1ProductionsMembersRolesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/";
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionRoleAssignmentToJSON)(requestParameters['productionRoleAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionRoleAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production role assignment.
     * Create a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production role assignment.
     * Delete a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersRolesDestroy().');
                        }
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesDestroy().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production role assignment.
     * Delete a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all role assignments for a production member.
     * List Production Role Assignments
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesList().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/";
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionRoleAssignmentListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all role assignments for a production member.
     * List Production Role Assignments
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production role assignment.
     * Partially Update a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersRolesPartialUpdate().');
                        }
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesPartialUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionRoleAssignmentToJSON)(requestParameters['patchedProductionRoleAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionRoleAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production role assignment.
     * Partially Update a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production role assignment.
     * Retrieve a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersRolesRetrieve().');
                        }
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesRetrieve().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionRoleAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production role assignment.
     * Retrieve a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production role assignment.
     * Update a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersRolesUpdate().');
                        }
                        if (requestParameters['memberId'] == null) {
                            throw new runtime.RequiredError('memberId', 'Required parameter "memberId" was null or undefined when calling productionV1ProductionsMembersRolesUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersRolesUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersRolesUpdate().');
                        }
                        if (requestParameters['productionRoleAssignment'] == null) {
                            throw new runtime.RequiredError('productionRoleAssignment', 'Required parameter "productionRoleAssignment" was null or undefined when calling productionV1ProductionsMembersRolesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{member_id}/roles/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("member_id", "}"), encodeURIComponent(String(requestParameters['memberId'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionRoleAssignmentToJSON)(requestParameters['productionRoleAssignment']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionRoleAssignmentFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production role assignment.
     * Update a Production Role Assignment
     */
    ProductionApi.prototype.productionV1ProductionsMembersRolesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersRolesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production member.
     * Update a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsMembersUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsMembersUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsMembersUpdate().');
                        }
                        if (requestParameters['productionMember'] == null) {
                            throw new runtime.RequiredError('productionMember', 'Required parameter "productionMember" was null or undefined when calling productionV1ProductionsMembersUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/members/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionMemberToJSON)(requestParameters['productionMember']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionMemberFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production member.
     * Update a Production Member
     */
    ProductionApi.prototype.productionV1ProductionsMembersUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsMembersUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production.
     * Partially Update a Production
     */
    ProductionApi.prototype.productionV1ProductionsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionToJSON)(requestParameters['patchedProduction']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production.
     * Partially Update a Production
     */
    ProductionApi.prototype.productionV1ProductionsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new performance.
     * Create a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesCreate().');
                        }
                        if (requestParameters['performance'] == null) {
                            throw new runtime.RequiredError('performance', 'Required parameter "performance" was null or undefined when calling productionV1ProductionsPerformancesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PerformanceToJSON)(requestParameters['performance']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PerformanceFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new performance.
     * Create a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific performance.
     * Delete a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsPerformancesDestroy().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific performance.
     * Delete a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all performances for a production.
     * List Performances
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedPerformanceListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all performances for a production.
     * List Performances
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing performance.
     * Partially Update a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsPerformancesPartialUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedPerformanceToJSON)(requestParameters['patchedPerformance']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PerformanceFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing performance.
     * Partially Update a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific performance.
     * Retrieve a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsPerformancesRetrieve().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PerformanceFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific performance.
     * Retrieve a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing performance.
     * Update a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsPerformancesUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsPerformancesUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsPerformancesUpdate().');
                        }
                        if (requestParameters['performance'] == null) {
                            throw new runtime.RequiredError('performance', 'Required parameter "performance" was null or undefined when calling productionV1ProductionsPerformancesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/performances/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PerformanceToJSON)(requestParameters['performance']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PerformanceFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing performance.
     * Update a Performance
     */
    ProductionApi.prototype.productionV1ProductionsPerformancesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsPerformancesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new rehearsal.
     * Create a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsCreate().');
                        }
                        if (requestParameters['rehearsal'] == null) {
                            throw new runtime.RequiredError('rehearsal', 'Required parameter "rehearsal" was null or undefined when calling productionV1ProductionsRehearsalsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RehearsalToJSON)(requestParameters['rehearsal']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new rehearsal.
     * Create a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific rehearsal.
     * Delete a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsDestroy().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific rehearsal.
     * Delete a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all rehearsals for a production.
     * List Rehearsals
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedRehearsalListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all rehearsals for a production.
     * List Rehearsals
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing rehearsal.
     * Partially Update a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsPartialUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedRehearsalToJSON)(requestParameters['patchedRehearsal']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing rehearsal.
     * Partially Update a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new rehearsal participant.
     * Create a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsCreate().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsCreate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsCreate().');
                        }
                        if (requestParameters['rehearsalParticipant'] == null) {
                            throw new runtime.RequiredError('rehearsalParticipant', 'Required parameter "rehearsalParticipant" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RehearsalParticipantToJSON)(requestParameters['rehearsalParticipant']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalParticipantFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new rehearsal participant.
     * Create a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific rehearsal participant.
     * Delete a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsDestroy().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsDestroy().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific rehearsal participant.
     * Delete a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all participants for a rehearsal.
     * List Rehearsal Participants
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsList().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsList().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/";
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedRehearsalParticipantListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all participants for a rehearsal.
     * List Rehearsal Participants
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing rehearsal participant.
     * Partially Update a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsPartialUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsPartialUpdate().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedRehearsalParticipantToJSON)(requestParameters['patchedRehearsalParticipant']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalParticipantFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing rehearsal participant.
     * Partially Update a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific rehearsal participant.
     * Retrieve a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsRetrieve().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsRetrieve().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalParticipantFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific rehearsal participant.
     * Retrieve a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing rehearsal participant.
     * Update a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsUpdate().');
                        }
                        if (requestParameters['rehearsalId'] == null) {
                            throw new runtime.RequiredError('rehearsalId', 'Required parameter "rehearsalId" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsUpdate().');
                        }
                        if (requestParameters['rehearsalParticipant'] == null) {
                            throw new runtime.RequiredError('rehearsalParticipant', 'Required parameter "rehearsalParticipant" was null or undefined when calling productionV1ProductionsRehearsalsParticipantsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{rehearsal_id}/participants/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("rehearsal_id", "}"), encodeURIComponent(String(requestParameters['rehearsalId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RehearsalParticipantToJSON)(requestParameters['rehearsalParticipant']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalParticipantFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing rehearsal participant.
     * Update a Rehearsal Participant
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsParticipantsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsParticipantsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific rehearsal.
     * Retrieve a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsRetrieve().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific rehearsal.
     * Retrieve a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing rehearsal.
     * Update a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRehearsalsUpdate().');
                        }
                        if (requestParameters['productionId'] == null) {
                            throw new runtime.RequiredError('productionId', 'Required parameter "productionId" was null or undefined when calling productionV1ProductionsRehearsalsUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRehearsalsUpdate().');
                        }
                        if (requestParameters['rehearsal'] == null) {
                            throw new runtime.RequiredError('rehearsal', 'Required parameter "rehearsal" was null or undefined when calling productionV1ProductionsRehearsalsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{production_id}/rehearsals/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("production_id", "}"), encodeURIComponent(String(requestParameters['productionId'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RehearsalToJSON)(requestParameters['rehearsal']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.RehearsalFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing rehearsal.
     * Update a Rehearsal
     */
    ProductionApi.prototype.productionV1ProductionsRehearsalsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRehearsalsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production.
     * Retrieve a Production
     */
    ProductionApi.prototype.productionV1ProductionsRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production.
     * Retrieve a Production
     */
    ProductionApi.prototype.productionV1ProductionsRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production.
     * Update a Production
     */
    ProductionApi.prototype.productionV1ProductionsUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1ProductionsUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1ProductionsUpdate().');
                        }
                        if (requestParameters['production'] == null) {
                            throw new runtime.RequiredError('production', 'Required parameter "production" was null or undefined when calling productionV1ProductionsUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/productions/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionToJSON)(requestParameters['production']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production.
     * Update a Production
     */
    ProductionApi.prototype.productionV1ProductionsUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1ProductionsUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create a new production venue.
     * Create a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesCreateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesCreate().');
                        }
                        if (requestParameters['productionVenue'] == null) {
                            throw new runtime.RequiredError('productionVenue', 'Required parameter "productionVenue" was null or undefined when calling productionV1VenuesCreate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionVenueToJSON)(requestParameters['productionVenue']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionVenueFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create a new production venue.
     * Create a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesCreate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesCreateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete a specific production venue.
     * Delete a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesDestroyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1VenuesDestroy().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesDestroy().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete a specific production venue.
     * Delete a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesDestroy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesDestroyRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Retrieve all production venues.
     * List Production Venues
     */
    ProductionApi.prototype.productionV1VenuesListRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesList().');
                        }
                        queryParameters = {};
                        if (requestParameters['page'] != null) {
                            queryParameters['page'] = requestParameters['page'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['page_size'] = requestParameters['pageSize'];
                        }
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/";
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.PaginatedProductionVenueListFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve all production venues.
     * List Production Venues
     */
    ProductionApi.prototype.productionV1VenuesList = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesListRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Partially update an existing production venue.
     * Partially Update a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesPartialUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1VenuesPartialUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesPartialUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PatchedProductionVenueToJSON)(requestParameters['patchedProductionVenue']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionVenueFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Partially update an existing production venue.
     * Partially Update a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesPartialUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesPartialUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Retrieve a specific production venue.
     * Retrieve a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesRetrieveRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1VenuesRetrieve().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesRetrieve().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionVenueFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Retrieve a specific production venue.
     * Retrieve a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesRetrieve = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesRetrieveRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an existing production venue.
     * Update a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesUpdateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling productionV1VenuesUpdate().');
                        }
                        if (requestParameters['tenantRef'] == null) {
                            throw new runtime.RequiredError('tenantRef', 'Required parameter "tenantRef" was null or undefined when calling productionV1VenuesUpdate().');
                        }
                        if (requestParameters['productionVenue'] == null) {
                            throw new runtime.RequiredError('productionVenue', 'Required parameter "productionVenue" was null or undefined when calling productionV1VenuesUpdate().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/t/{tenant_ref}/production/v1/venues/{id}/";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        urlPath = urlPath.replace("{".concat("tenant_ref", "}"), encodeURIComponent(String(requestParameters['tenantRef'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ProductionVenueToJSON)(requestParameters['productionVenue']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ProductionVenueFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an existing production venue.
     * Update a Production Venue
     */
    ProductionApi.prototype.productionV1VenuesUpdate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.productionV1VenuesUpdateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ProductionApi;
}(runtime.BaseAPI));
exports.ProductionApi = ProductionApi;
