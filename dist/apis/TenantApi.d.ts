/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PaginatedTenantList, PatchedTenant, Tenant } from '../models/index';
export interface ApiTenantV1TenantsCreateRequest {
    tenant: Omit<Tenant, 'id' | 'ulid' | 'created_at' | 'updated_at'>;
}
export interface ApiTenantV1TenantsDestroyRequest {
    ulid: string;
}
export interface ApiTenantV1TenantsListRequest {
    code?: string;
    page?: number;
    pageSize?: number;
}
export interface ApiTenantV1TenantsPartialUpdateRequest {
    ulid: string;
    patchedTenant?: Omit<PatchedTenant, 'id' | 'ulid' | 'created_at' | 'updated_at'>;
}
export interface ApiTenantV1TenantsRetrieveRequest {
    ulid: string;
}
export interface ApiTenantV1TenantsUpdateRequest {
    ulid: string;
    tenant: Omit<Tenant, 'id' | 'ulid' | 'created_at' | 'updated_at'>;
}
/**
 *
 */
export declare class TenantApi extends runtime.BaseAPI {
    /**
     * Create a new tenant in the system.
     * Create a new tenant
     */
    apiTenantV1TenantsCreateRaw(requestParameters: ApiTenantV1TenantsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tenant>>;
    /**
     * Create a new tenant in the system.
     * Create a new tenant
     */
    apiTenantV1TenantsCreate(requestParameters: ApiTenantV1TenantsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
    /**
     * Remove a tenant from the system by its ULID.
     * Delete a tenant
     */
    apiTenantV1TenantsDestroyRaw(requestParameters: ApiTenantV1TenantsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove a tenant from the system by its ULID.
     * Delete a tenant
     */
    apiTenantV1TenantsDestroy(requestParameters: ApiTenantV1TenantsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieve a list of all tenants in the system. Optionally filter by ?code prefix.
     * List all tenants
     */
    apiTenantV1TenantsListRaw(requestParameters: ApiTenantV1TenantsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedTenantList>>;
    /**
     * Retrieve a list of all tenants in the system. Optionally filter by ?code prefix.
     * List all tenants
     */
    apiTenantV1TenantsList(requestParameters?: ApiTenantV1TenantsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedTenantList>;
    /**
     * Update specific fields of an existing tenant without affecting others.
     * Partially update a tenant
     */
    apiTenantV1TenantsPartialUpdateRaw(requestParameters: ApiTenantV1TenantsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tenant>>;
    /**
     * Update specific fields of an existing tenant without affecting others.
     * Partially update a tenant
     */
    apiTenantV1TenantsPartialUpdate(requestParameters: ApiTenantV1TenantsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
    /**
     * Get detailed information about a specific tenant by its ULID.
     * Retrieve a specific tenant
     */
    apiTenantV1TenantsRetrieveRaw(requestParameters: ApiTenantV1TenantsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tenant>>;
    /**
     * Get detailed information about a specific tenant by its ULID.
     * Retrieve a specific tenant
     */
    apiTenantV1TenantsRetrieve(requestParameters: ApiTenantV1TenantsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
    /**
     * Modify the details of an existing tenant by its ULID.
     * Update an existing tenant
     */
    apiTenantV1TenantsUpdateRaw(requestParameters: ApiTenantV1TenantsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tenant>>;
    /**
     * Modify the details of an existing tenant by its ULID.
     * Update an existing tenant
     */
    apiTenantV1TenantsUpdate(requestParameters: ApiTenantV1TenantsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
}
