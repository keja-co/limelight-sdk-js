/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.86
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Asset, Assignment, PaginatedAssetList, PaginatedAssignmentList, PatchedAsset, PatchedAssignment } from '../models/index';
export interface AssetsV1AssetsAssignmentsCreateRequest {
    assetId: number;
    tenantRef: string;
    assignment: Omit<Assignment, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface AssetsV1AssetsAssignmentsDestroyRequest {
    assetId: number;
    id: number;
    tenantRef: string;
}
export interface AssetsV1AssetsAssignmentsListRequest {
    assetId: number;
    tenantRef: string;
    page?: number;
    pageSize?: number;
}
export interface AssetsV1AssetsAssignmentsPartialUpdateRequest {
    assetId: number;
    id: number;
    tenantRef: string;
    patchedAssignment?: Omit<PatchedAssignment, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface AssetsV1AssetsAssignmentsRetrieveRequest {
    assetId: number;
    id: number;
    tenantRef: string;
}
export interface AssetsV1AssetsAssignmentsUpdateRequest {
    assetId: number;
    id: number;
    tenantRef: string;
    assignment: Omit<Assignment, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface AssetsV1AssetsCreateRequest {
    tenantRef: string;
    asset: Omit<Asset, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface AssetsV1AssetsDestroyRequest {
    id: number;
    tenantRef: string;
}
export interface AssetsV1AssetsListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}
export interface AssetsV1AssetsPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedAsset?: Omit<PatchedAsset, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface AssetsV1AssetsRetrieveRequest {
    id: number;
    tenantRef: string;
}
export interface AssetsV1AssetsUpdateRequest {
    id: number;
    tenantRef: string;
    asset: Omit<Asset, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
/**
 *
 */
export declare class AssetsApi extends runtime.BaseAPI {
    /**
     * Add a new assignment to a specific asset.
     * Create a new assignment for an asset
     */
    assetsV1AssetsAssignmentsCreateRaw(requestParameters: AssetsV1AssetsAssignmentsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Assignment>>;
    /**
     * Add a new assignment to a specific asset.
     * Create a new assignment for an asset
     */
    assetsV1AssetsAssignmentsCreate(requestParameters: AssetsV1AssetsAssignmentsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Assignment>;
    /**
     * Remove an assignment from the system by its ID.
     * Delete an assignment
     */
    assetsV1AssetsAssignmentsDestroyRaw(requestParameters: AssetsV1AssetsAssignmentsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove an assignment from the system by its ID.
     * Delete an assignment
     */
    assetsV1AssetsAssignmentsDestroy(requestParameters: AssetsV1AssetsAssignmentsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieve a list of all assignments associated with a specific asset.
     * List all assignments for an asset
     */
    assetsV1AssetsAssignmentsListRaw(requestParameters: AssetsV1AssetsAssignmentsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedAssignmentList>>;
    /**
     * Retrieve a list of all assignments associated with a specific asset.
     * List all assignments for an asset
     */
    assetsV1AssetsAssignmentsList(requestParameters: AssetsV1AssetsAssignmentsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedAssignmentList>;
    /**
     * Update specific fields of an existing assignment without affecting others.
     * Partially update an assignment
     */
    assetsV1AssetsAssignmentsPartialUpdateRaw(requestParameters: AssetsV1AssetsAssignmentsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Assignment>>;
    /**
     * Update specific fields of an existing assignment without affecting others.
     * Partially update an assignment
     */
    assetsV1AssetsAssignmentsPartialUpdate(requestParameters: AssetsV1AssetsAssignmentsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Assignment>;
    /**
     * Get detailed information about a specific assignment by its ID.
     * Retrieve a specific assignment
     */
    assetsV1AssetsAssignmentsRetrieveRaw(requestParameters: AssetsV1AssetsAssignmentsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Assignment>>;
    /**
     * Get detailed information about a specific assignment by its ID.
     * Retrieve a specific assignment
     */
    assetsV1AssetsAssignmentsRetrieve(requestParameters: AssetsV1AssetsAssignmentsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Assignment>;
    /**
     * Modify the details of an existing assignment by its ID.
     * Update an existing assignment
     */
    assetsV1AssetsAssignmentsUpdateRaw(requestParameters: AssetsV1AssetsAssignmentsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Assignment>>;
    /**
     * Modify the details of an existing assignment by its ID.
     * Update an existing assignment
     */
    assetsV1AssetsAssignmentsUpdate(requestParameters: AssetsV1AssetsAssignmentsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Assignment>;
    /**
     * Add a new asset to the system.
     * Create a new asset
     */
    assetsV1AssetsCreateRaw(requestParameters: AssetsV1AssetsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Asset>>;
    /**
     * Add a new asset to the system.
     * Create a new asset
     */
    assetsV1AssetsCreate(requestParameters: AssetsV1AssetsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Asset>;
    /**
     * Remove an asset from the system by its ID.
     * Delete an asset
     */
    assetsV1AssetsDestroyRaw(requestParameters: AssetsV1AssetsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove an asset from the system by its ID.
     * Delete an asset
     */
    assetsV1AssetsDestroy(requestParameters: AssetsV1AssetsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieve a list of all assets in the system.
     * List all assets
     */
    assetsV1AssetsListRaw(requestParameters: AssetsV1AssetsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedAssetList>>;
    /**
     * Retrieve a list of all assets in the system.
     * List all assets
     */
    assetsV1AssetsList(requestParameters: AssetsV1AssetsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedAssetList>;
    /**
     * Update specific fields of an existing asset without affecting others.
     * Partially update an asset
     */
    assetsV1AssetsPartialUpdateRaw(requestParameters: AssetsV1AssetsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Asset>>;
    /**
     * Update specific fields of an existing asset without affecting others.
     * Partially update an asset
     */
    assetsV1AssetsPartialUpdate(requestParameters: AssetsV1AssetsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Asset>;
    /**
     * Get detailed information about a specific asset by its ID.
     * Retrieve a specific asset
     */
    assetsV1AssetsRetrieveRaw(requestParameters: AssetsV1AssetsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Asset>>;
    /**
     * Get detailed information about a specific asset by its ID.
     * Retrieve a specific asset
     */
    assetsV1AssetsRetrieve(requestParameters: AssetsV1AssetsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Asset>;
    /**
     * Modify the details of an existing asset by its ID.
     * Update an existing asset
     */
    assetsV1AssetsUpdateRaw(requestParameters: AssetsV1AssetsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Asset>>;
    /**
     * Modify the details of an existing asset by its ID.
     * Update an existing asset
     */
    assetsV1AssetsUpdate(requestParameters: AssetsV1AssetsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Asset>;
}
