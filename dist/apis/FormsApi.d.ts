/**
 * Limelight API
 * Limelight manages your theatre production process from auditions to bump out.
 *
 * The version of the OpenAPI document: 1.0.113
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Form, FormField, PaginatedFormFieldList, PaginatedFormList, PaginatedSubmissionFieldValueList, PaginatedSubmissionList, PatchedForm, PatchedFormField, PatchedSubmission, PatchedSubmissionFieldValue, Submission, SubmissionFieldValue } from '../models/index';
export interface FormsV1FormsCreateRequest {
    tenantRef: string;
    form: Omit<Form, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsDestroyRequest {
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsFieldsCreateRequest {
    formId: number;
    tenantRef: string;
    formField: Omit<FormField, 'id' | 'created_at' | 'updated_at'>;
}
export interface FormsV1FormsFieldsDestroyRequest {
    formId: number;
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsFieldsListRequest {
    formId: number;
    tenantRef: string;
    page?: number;
    pageSize?: number;
}
export interface FormsV1FormsFieldsPartialUpdateRequest {
    formId: number;
    id: number;
    tenantRef: string;
    patchedFormField?: Omit<PatchedFormField, 'id' | 'created_at' | 'updated_at'>;
}
export interface FormsV1FormsFieldsRetrieveRequest {
    formId: number;
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsFieldsUpdateRequest {
    formId: number;
    id: number;
    tenantRef: string;
    formField: Omit<FormField, 'id' | 'created_at' | 'updated_at'>;
}
export interface FormsV1FormsListRequest {
    tenantRef: string;
    page?: number;
    pageSize?: number;
}
export interface FormsV1FormsPartialUpdateRequest {
    id: number;
    tenantRef: string;
    patchedForm?: Omit<PatchedForm, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsRetrieveRequest {
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsByMemberRetrieveRequest {
    member: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsCreateRequest {
    formId: number;
    tenantRef: string;
    submission: Omit<Submission, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'submitted_date_time' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsSubmissionsDestroyRequest {
    formId: number;
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsFieldResponseCreateRequest {
    fieldId: number;
    formId: number;
    submissionId: number;
    tenantRef: string;
    submissionFieldValue: Omit<SubmissionFieldValue, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsSubmissionsFieldResponseDestroyRequest {
    fieldId: number;
    formId: number;
    id: number;
    submissionId: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsFieldResponseListRequest {
    fieldId: number;
    formId: number;
    submissionId: number;
    tenantRef: string;
    page?: number;
    pageSize?: number;
}
export interface FormsV1FormsSubmissionsFieldResponsePartialUpdateRequest {
    fieldId: number;
    formId: number;
    id: number;
    submissionId: number;
    tenantRef: string;
    patchedSubmissionFieldValue?: Omit<PatchedSubmissionFieldValue, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsSubmissionsFieldResponseRetrieveRequest {
    fieldId: number;
    formId: number;
    id: number;
    submissionId: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsFieldResponseUpdateRequest {
    fieldId: number;
    formId: number;
    id: number;
    submissionId: number;
    tenantRef: string;
    submissionFieldValue: Omit<SubmissionFieldValue, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsSubmissionsListRequest {
    formId: number;
    tenantRef: string;
    member?: number;
    page?: number;
    pageSize?: number;
}
export interface FormsV1FormsSubmissionsPartialUpdateRequest {
    formId: number;
    id: number;
    tenantRef: string;
    patchedSubmission?: Omit<PatchedSubmission, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'submitted_date_time' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsSubmissionsRetrieveRequest {
    formId: number;
    id: number;
    tenantRef: string;
}
export interface FormsV1FormsSubmissionsUpdateRequest {
    formId: number;
    id: number;
    tenantRef: string;
    submission: Omit<Submission, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'submitted_date_time' | 'tenant' | 'created_by' | 'updated_by'>;
}
export interface FormsV1FormsUpdateRequest {
    id: number;
    tenantRef: string;
    form: Omit<Form, 'id' | 'created_at' | 'updated_at' | 'archive_at' | 'tenant' | 'created_by' | 'updated_by'>;
}
/**
 *
 */
export declare class FormsApi extends runtime.BaseAPI {
    /**
     * Add a new form to the system.
     * Create a new form
     */
    formsV1FormsCreateRaw(requestParameters: FormsV1FormsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Form>>;
    /**
     * Add a new form to the system.
     * Create a new form
     */
    formsV1FormsCreate(requestParameters: FormsV1FormsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Form>;
    /**
     * Remove a form from the system by its ID.
     * Delete a form
     */
    formsV1FormsDestroyRaw(requestParameters: FormsV1FormsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove a form from the system by its ID.
     * Delete a form
     */
    formsV1FormsDestroy(requestParameters: FormsV1FormsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Add a new field to a specific form.
     * Create a new form field
     */
    formsV1FormsFieldsCreateRaw(requestParameters: FormsV1FormsFieldsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FormField>>;
    /**
     * Add a new field to a specific form.
     * Create a new form field
     */
    formsV1FormsFieldsCreate(requestParameters: FormsV1FormsFieldsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FormField>;
    /**
     * Remove a form field from the system by its ID.
     * Delete a form field
     */
    formsV1FormsFieldsDestroyRaw(requestParameters: FormsV1FormsFieldsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove a form field from the system by its ID.
     * Delete a form field
     */
    formsV1FormsFieldsDestroy(requestParameters: FormsV1FormsFieldsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieve a list of all fields associated with a specific form.
     * List all form fields
     */
    formsV1FormsFieldsListRaw(requestParameters: FormsV1FormsFieldsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedFormFieldList>>;
    /**
     * Retrieve a list of all fields associated with a specific form.
     * List all form fields
     */
    formsV1FormsFieldsList(requestParameters: FormsV1FormsFieldsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedFormFieldList>;
    /**
     * Update specific fields of an existing form field without affecting others.
     * Partially update a form field
     */
    formsV1FormsFieldsPartialUpdateRaw(requestParameters: FormsV1FormsFieldsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FormField>>;
    /**
     * Update specific fields of an existing form field without affecting others.
     * Partially update a form field
     */
    formsV1FormsFieldsPartialUpdate(requestParameters: FormsV1FormsFieldsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FormField>;
    /**
     * Get detailed information about a specific form field by its ID.
     * Retrieve a specific form field
     */
    formsV1FormsFieldsRetrieveRaw(requestParameters: FormsV1FormsFieldsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FormField>>;
    /**
     * Get detailed information about a specific form field by its ID.
     * Retrieve a specific form field
     */
    formsV1FormsFieldsRetrieve(requestParameters: FormsV1FormsFieldsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FormField>;
    /**
     * Modify the details of an existing form field by its ID.
     * Update an existing form field
     */
    formsV1FormsFieldsUpdateRaw(requestParameters: FormsV1FormsFieldsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FormField>>;
    /**
     * Modify the details of an existing form field by its ID.
     * Update an existing form field
     */
    formsV1FormsFieldsUpdate(requestParameters: FormsV1FormsFieldsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FormField>;
    /**
     * Retrieve a list of all forms in the system.
     * List all forms
     */
    formsV1FormsListRaw(requestParameters: FormsV1FormsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedFormList>>;
    /**
     * Retrieve a list of all forms in the system.
     * List all forms
     */
    formsV1FormsList(requestParameters: FormsV1FormsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedFormList>;
    /**
     * Update specific fields of an existing form without affecting others.
     * Partially update a form
     */
    formsV1FormsPartialUpdateRaw(requestParameters: FormsV1FormsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Form>>;
    /**
     * Update specific fields of an existing form without affecting others.
     * Partially update a form
     */
    formsV1FormsPartialUpdate(requestParameters: FormsV1FormsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Form>;
    /**
     * Get detailed information about a specific form by its ID.
     * Retrieve a specific form
     */
    formsV1FormsRetrieveRaw(requestParameters: FormsV1FormsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Form>>;
    /**
     * Get detailed information about a specific form by its ID.
     * Retrieve a specific form
     */
    formsV1FormsRetrieve(requestParameters: FormsV1FormsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Form>;
    /**
     * Convenience endpoint to list latest submissions for a specific user across forms.
     * List submissions by member
     */
    formsV1FormsSubmissionsByMemberRetrieveRaw(requestParameters: FormsV1FormsSubmissionsByMemberRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Form>>;
    /**
     * Convenience endpoint to list latest submissions for a specific user across forms.
     * List submissions by member
     */
    formsV1FormsSubmissionsByMemberRetrieve(requestParameters: FormsV1FormsSubmissionsByMemberRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Form>;
    /**
     * Add a new submission to a specific form.
     * Create a new submission for a form
     */
    formsV1FormsSubmissionsCreateRaw(requestParameters: FormsV1FormsSubmissionsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Submission>>;
    /**
     * Add a new submission to a specific form.
     * Create a new submission for a form
     */
    formsV1FormsSubmissionsCreate(requestParameters: FormsV1FormsSubmissionsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Submission>;
    /**
     * Remove a submission from the system by its ID.
     * Delete a submission
     */
    formsV1FormsSubmissionsDestroyRaw(requestParameters: FormsV1FormsSubmissionsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove a submission from the system by its ID.
     * Delete a submission
     */
    formsV1FormsSubmissionsDestroy(requestParameters: FormsV1FormsSubmissionsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Add a new field value to a specific submission.
     * Create a new field value for a submission
     */
    formsV1FormsSubmissionsFieldResponseCreateRaw(requestParameters: FormsV1FormsSubmissionsFieldResponseCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubmissionFieldValue>>;
    /**
     * Add a new field value to a specific submission.
     * Create a new field value for a submission
     */
    formsV1FormsSubmissionsFieldResponseCreate(requestParameters: FormsV1FormsSubmissionsFieldResponseCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubmissionFieldValue>;
    /**
     * Remove a field value from the system by its ID.
     * Delete a field value
     */
    formsV1FormsSubmissionsFieldResponseDestroyRaw(requestParameters: FormsV1FormsSubmissionsFieldResponseDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove a field value from the system by its ID.
     * Delete a field value
     */
    formsV1FormsSubmissionsFieldResponseDestroy(requestParameters: FormsV1FormsSubmissionsFieldResponseDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieve a list of all field values associated with a specific submission.
     * List all field values for a submission
     */
    formsV1FormsSubmissionsFieldResponseListRaw(requestParameters: FormsV1FormsSubmissionsFieldResponseListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedSubmissionFieldValueList>>;
    /**
     * Retrieve a list of all field values associated with a specific submission.
     * List all field values for a submission
     */
    formsV1FormsSubmissionsFieldResponseList(requestParameters: FormsV1FormsSubmissionsFieldResponseListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedSubmissionFieldValueList>;
    /**
     * Update specific fields of an existing field value without affecting others.
     * Partially update a field value
     */
    formsV1FormsSubmissionsFieldResponsePartialUpdateRaw(requestParameters: FormsV1FormsSubmissionsFieldResponsePartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubmissionFieldValue>>;
    /**
     * Update specific fields of an existing field value without affecting others.
     * Partially update a field value
     */
    formsV1FormsSubmissionsFieldResponsePartialUpdate(requestParameters: FormsV1FormsSubmissionsFieldResponsePartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubmissionFieldValue>;
    /**
     * Get detailed information about a specific field value by its ID.
     * Retrieve a specific field value
     */
    formsV1FormsSubmissionsFieldResponseRetrieveRaw(requestParameters: FormsV1FormsSubmissionsFieldResponseRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubmissionFieldValue>>;
    /**
     * Get detailed information about a specific field value by its ID.
     * Retrieve a specific field value
     */
    formsV1FormsSubmissionsFieldResponseRetrieve(requestParameters: FormsV1FormsSubmissionsFieldResponseRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubmissionFieldValue>;
    /**
     * Modify the details of an existing field value by its ID.
     * Update an existing field value
     */
    formsV1FormsSubmissionsFieldResponseUpdateRaw(requestParameters: FormsV1FormsSubmissionsFieldResponseUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubmissionFieldValue>>;
    /**
     * Modify the details of an existing field value by its ID.
     * Update an existing field value
     */
    formsV1FormsSubmissionsFieldResponseUpdate(requestParameters: FormsV1FormsSubmissionsFieldResponseUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubmissionFieldValue>;
    /**
     * Retrieve a list of all submissions associated with a specific form.
     * List all submissions for a form
     */
    formsV1FormsSubmissionsListRaw(requestParameters: FormsV1FormsSubmissionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedSubmissionList>>;
    /**
     * Retrieve a list of all submissions associated with a specific form.
     * List all submissions for a form
     */
    formsV1FormsSubmissionsList(requestParameters: FormsV1FormsSubmissionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedSubmissionList>;
    /**
     * Update specific fields of an existing submission without affecting others.
     * Partially update a submission
     */
    formsV1FormsSubmissionsPartialUpdateRaw(requestParameters: FormsV1FormsSubmissionsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Submission>>;
    /**
     * Update specific fields of an existing submission without affecting others.
     * Partially update a submission
     */
    formsV1FormsSubmissionsPartialUpdate(requestParameters: FormsV1FormsSubmissionsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Submission>;
    /**
     * Get detailed information about a specific submission by its ID.
     * Retrieve a specific submission
     */
    formsV1FormsSubmissionsRetrieveRaw(requestParameters: FormsV1FormsSubmissionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Submission>>;
    /**
     * Get detailed information about a specific submission by its ID.
     * Retrieve a specific submission
     */
    formsV1FormsSubmissionsRetrieve(requestParameters: FormsV1FormsSubmissionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Submission>;
    /**
     * Modify the details of an existing submission by its ID.
     * Update an existing submission
     */
    formsV1FormsSubmissionsUpdateRaw(requestParameters: FormsV1FormsSubmissionsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Submission>>;
    /**
     * Modify the details of an existing submission by its ID.
     * Update an existing submission
     */
    formsV1FormsSubmissionsUpdate(requestParameters: FormsV1FormsSubmissionsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Submission>;
    /**
     * Modify the details of an existing form by its ID.
     * Update an existing form
     */
    formsV1FormsUpdateRaw(requestParameters: FormsV1FormsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Form>>;
    /**
     * Modify the details of an existing form by its ID.
     * Update an existing form
     */
    formsV1FormsUpdate(requestParameters: FormsV1FormsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Form>;
}
